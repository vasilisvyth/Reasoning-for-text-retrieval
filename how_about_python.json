{
    "German nonlinear narrative films or based on works by Bret Easton Ellis": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: German nonlinear narrative films or based on works by Bret Easton Ellis\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "German spy comedy films, or 2000s comedy-drama mystery films.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: German spy comedy films, or 2000s comedy-drama mystery films.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "films that are South Korean adventure comedies or Canadian fantasy comedies": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: films that are South Korean adventure comedies or Canadian fantasy comedies\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "what are some 1950s comedy mystery or spy comedy films": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: what are some 1950s comedy mystery or spy comedy films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films",
        "pred": "```python\nquestion = 'what are some 1950s comedy mystery or spy comedy films'\n\n# Define the subquestions\ncomedy_mystery_1950s = 'some 1950s comedy mystery films'\nspy_comedy = 'some spy comedy films'\n\n# Combine using the correct logical operator if needed\nanswer = comedy_mystery_1950s or spy_comedy\n```"
    },
    "Films that are documentaries about circus performers or that were shot in Armenia": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Films that are documentaries about circus performers or that were shot in Armenia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Animated films about koalas or 1990s Australian animated films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Animated films about koalas or 1990s Australian animated films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films",
        "pred": "question = 'Animated films about koalas or 1990s Australian animated films'\n\n# Define the subquestions\nkoala_films = 'Animated films about koalas'\naustralian_90s_films = '1990s Australian animated films'\n\n# Combine using the correct logical operator if needed\nanswer = koala_films or australian_90s_films"
    },
    "2022 crime action or crime thriller films": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 2022 crime action or crime thriller films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "New Zealand films about revenge or science fiction": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: New Zealand films about revenge or science fiction\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "what are films about prostitution in Greece or Greek multilingual films?": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: what are films about prostitution in Greece or Greek multilingual films?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Films that are either 2021 romantic comedy-drama, or Norwegian romantic drama films": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Films that are either 2021 romantic comedy-drama, or Norwegian romantic drama films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "1970s adventure thrillers or Films shot in Martha's Vineyard.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 1970s adventure thrillers or Films shot in Martha's Vineyard.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Films that are either shot in Karaikudi or based on Sense and Sensibility": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Films that are either shot in Karaikudi or based on Sense and Sensibility\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Films set in Dunkirk or action films that are Dutch": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Films set in Dunkirk or action films that are Dutch\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Emirati comedy or adventure films": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Emirati comedy or adventure films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Russian films about pregnancy or ice hockey": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Russian films about pregnancy or ice hockey\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "1995 martial arts films or about the Power Rangers": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1995 martial arts films or about the Power Rangers\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Russian adventure comedy films or Russian action comedy films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Russian adventure comedy films or Russian action comedy films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Spy films from Italy, or historical thriller films from France.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Spy films from Italy, or historical thriller films from France.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "1985 animes, or 1980's French animated films": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 1985 animes, or 1980's French animated films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Films set in Jilin or Asian-American comedy-dramas": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Films set in Jilin or Asian-American comedy-dramas\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Haitian documentary films, or movies shot in Haiti.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Haitian documentary films, or movies shot in Haiti.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films",
        "pred": "```python\nquestion = 'Haitian documentary films, or movies shot in Haiti.'\n\n# Define the subquestions\nhaitian_documentary_films = 'Haitian documentary films'\nmovies_shot_in_haiti = 'movies shot in Haiti'\n\n# Combine using the correct logical operator if needed\nanswer = haitian_documentary_films or movies_shot_in_haiti\n```"
    },
    "animated Indonesian or multilingual Emirati films": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: animated Indonesian or multilingual Emirati films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "French sci-fi thriller films or sci-fi thriller films from the 1960's": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: French sci-fi thriller films or sci-fi thriller films from the 1960's\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Chinese sci-fi action films or that were shot in Shandong": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Chinese sci-fi action films or that were shot in Shandong\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "CAOZ films or Icelandic short films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: CAOZ films or Icelandic short films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films",
        "pred": "```python\nquestion = 'CAOZ films or Icelandic short films'\n\n# Define the subquestions\ncaoz_films = 'CAOZ films'\nicelandic_short_films = 'Icelandic short films'\n\n# Combine using the correct logical operator if needed\nanswer = caoz_films or icelandic_short_films\n```"
    },
    "Ukrainian films about historical drama or World War II": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Ukrainian films about historical drama or World War II\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films",
        "pred": "```python\nquestion = 'Ukrainian films about historical drama or World War II'\n\n# Define the subquestions\nukrainian_historical_drama_films = 'Ukrainian films about historical drama'\nworld_war_ii_films = 'World War II'\n\n# Combine using the correct logical operator if needed\nanswer = ukrainian_historical_drama_films or world_war_ii_films\n```"
    },
    "Satirical or television films from Austria": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Satirical or television films from Austria\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Prison films from South Korea or films set in Daejeon": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Prison films from South Korea or films set in Daejeon\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "list some Films shot in Mussoorie or set in Kanpur": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: list some Films shot in Mussoorie or set in Kanpur\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Films based on Puss in Boots or 1969 anime films": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Films based on Puss in Boots or 1969 anime films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films",
        "pred": "```python\nquestion = 'Films based on Puss in Boots or 1969 anime films'\n\n# Define the subquestions\npuss_in_boots_films = 'Films based on Puss in Boots'\nanime_1969_films = '1969 anime films'\n\n# Combine using the correct logical operator if needed\nanswer = puss_in_boots_films or anime_1969_films\n```"
    },
    "Films set in 1831 or 1809": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Films set in 1831 or 1809\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "New Zealand coming-of-age films or New Zealand romance films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: New Zealand coming-of-age films or New Zealand romance films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Films based on work by Osamu Tezuka or Chinese animated science fiction films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Films based on work by Osamu Tezuka or Chinese animated science fiction films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "what are some Hungarian Revolution of 1956 or Austrian war films": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: what are some Hungarian Revolution of 1956 or Austrian war films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Spanish films about science fiction action or, post-apocalyptic.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Spanish films about science fiction action or, post-apocalyptic.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Films set in the 7th century or Bulgarian biography": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Films set in the 7th century or Bulgarian biography\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Films that are either set in 11th century song dynasty or set in the Western Xia": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Films that are either set in 11th century song dynasty or set in the Western Xia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Documentary films about deaf people or special education": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Documentary films about deaf people or special education\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films",
        "pred": "```python\nquestion = 'Documentary films about deaf people or special education'\n\n# Define the subquestions\ndocumentary_films_deaf_people = 'Documentary films about deaf people'\nspecial_education = 'Special education'\n\n# Combine using the correct logical operator if needed\nanswer = documentary_films_deaf_people or special_education\n```"
    },
    "2020s historical fantasy films or Louis XIV biographical films": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 2020s historical fantasy films or Louis XIV biographical films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "1900s 3D or horror films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 1900s 3D or horror films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Vietnamese or South Korean supernatural horror films": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Vietnamese or South Korean supernatural horror films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Greek biographical drama films set in Riga": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Greek biographical drama films set in Riga\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "1450s set films or Turkish films about history and adventure": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 1450s set films or Turkish films about history and adventure\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "what are some 2020s comedy mystery films or 2020s spy comedy films": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: what are some 2020s comedy mystery films or 2020s spy comedy films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films",
        "pred": "```python\nquestion = 'what are some 2020s comedy mystery films or 2020s spy comedy films'\n\n# Define the subquestions\ncomedy_mystery_films = '2020s comedy mystery films'\nspy_comedy_films = '2020s spy comedy films'\n \n# Combine using the correct logical operator if needed\nanswer = comedy_mystery_films or spy_comedy_films\n```"
    },
    "Screenplays by Syamsul Yusof films or auto racing films from Malaysia": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Screenplays by Syamsul Yusof films or auto racing films from Malaysia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Taiwanese or 2010s martial arts comedy films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Taiwanese or 2010s martial arts comedy films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Finnish television and animated films": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Finnish television and animated films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films",
        "pred": "question = 'Finnish television and animated films'\n\n# Define the subquestions\ntelevision = 'Finnish television'\nanimated_films = 'Finnish animated films'\n\n# Combine using the correct logical operator if needed\nanswer = television and animated_films"
    },
    "Hong Kong adventure films or Chinese historical action films": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Hong Kong adventure films or Chinese historical action films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Films shot in Ubatuba or Brazilian historical films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Films shot in Ubatuba or Brazilian historical films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Films based on works by Dan Brown or shot in Florence": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Films based on works by Dan Brown or shot in Florence\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Australian animated films from the 1990s or koala films": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Australian animated films from the 1990s or koala films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Films shot in Leeds or Films set in Derbyshire": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Films shot in Leeds or Films set in Derbyshire\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Dutch erotic or crime thriller films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Dutch erotic or crime thriller films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "1981 anime films, also 1983 anime films.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 1981 anime films, also 1983 anime films.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Skunk films or E. B. White novel based films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Skunk films or E. B. White novel based films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Chinese adventure films that include comedy or drama.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Chinese adventure films that include comedy or drama.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "What are some Dutch sports films or films set in Rotterdam?": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: What are some Dutch sports films or films set in Rotterdam?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Science fiction films or historical comedy films from Turkey": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Science fiction films or historical comedy films from Turkey\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films",
        "pred": "```python\nquestion = 'Science fiction films or historical comedy films from Turkey'\n\n# Define the subquestions\nscience_fiction_films = 'Science fiction films'\nhistorical_comedy_films_turkey = 'historical comedy films from Turkey'\n\n# Combine using the correct logical operator if needed\nanswer = science_fiction_films or historical_comedy_films_turkey\n```"
    },
    "Films about the Canadian Armed Forces or that are 1960's action war films": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Films about the Canadian Armed Forces or that are 1960's action war films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Andrew Jackson films or films about the War or 1812": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Andrew Jackson films or films about the War or 1812\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "what are  some Bulgarian animated, or Polish children's films": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: what are  some Bulgarian animated, or Polish children's films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Horror drama films from the 2000s or Karel Jarom\u00edr Erben films": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Horror drama films from the 2000s or Karel Jarom\u00edr Erben films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Science fiction comedy drama films from Britain or 1960s films about pregnancy": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Science fiction comedy drama films from Britain or 1960s films about pregnancy\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films",
        "pred": "```python\nquestion = 'Science fiction comedy drama films from Britain or 1960s films about pregnancy'\n\n# Define the subquestions\nscience_fiction_comedy_drama_britain = 'Science fiction comedy drama films from Britain'\nfilms_about_pregnancy_1960s = '1960s films about pregnancy'\n\n# Combine using the correct logical operator if needed\nanswer = science_fiction_comedy_drama_britain or films_about_pregnancy_1960s\n```"
    },
    "Action comedy films from Taiwan or comedy films about martial arts from China": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Action comedy films from Taiwan or comedy films about martial arts from China\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films",
        "pred": "```python\nquestion = 'Action comedy films from Taiwan or comedy films about martial arts from China'\n\n# Define the subquestions\naction_comedy_films_taiwan = 'Action comedy films from Taiwan'\ncomedy_films_martial_arts_china = 'comedy films about martial arts from China'\n\n# Combine using the correct logical operator if needed\nanswer = action_comedy_films_taiwan or comedy_films_martial_arts_china\n```"
    },
    "what are some 1950s historical action films or Films based on The Vicomte of Bragelonne: Ten Years Later": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: what are some 1950s historical action films or Films based on The Vicomte of Bragelonne: Ten Years Later\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Polish erotic drama films or avant-garde and experimental Switzerland films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Polish erotic drama films or avant-garde and experimental Switzerland films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Belgian science fiction drama films or Films set in the 2090s": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Belgian science fiction drama films or Films set in the 2090s\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "what are some Emirati multilingual or Pakistani animated films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: what are some Emirati multilingual or Pakistani animated films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "what are some Czech satirical films or Czech comedy horror films": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: what are some Czech satirical films or Czech comedy horror films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "films"
    },
    "Non- Philippine films set in Metro Manila.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Non- Philippine films set in Metro Manila.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Kathmandu films that aren't Nepalese": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Kathmandu films that aren't Nepalese\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films",
        "pred": "```python\nquestion = 'Kathmandu films that aren\\'t Nepalese'\n\n# Define the subquestions\nkathmandu_films = 'Kathmandu films'\nnot_nepalese = \"that aren't Nepalese\"\n\n# Combine using the correct logical operator if needed\nanswer = kathmandu_films and not_nepalese\n```"
    },
    "Non American teen 1990's coming-of-age comedy films": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Non American teen 1990's coming-of-age comedy films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films",
        "pred": "```python\nquestion = \"Non American teen 1990's coming-of-age comedy films\"\n\n# Define the subquestions\nnon_american_films = \"Non American films\"\nteen_films = \"teen films\"\ncomedy_films = \"comedy films\"\nnineties_films = \"1990's films\"\ncoming_of_age_films = \"coming-of-age films\"\n\n# Combine using the correct logical operator if needed\nanswer = non_american_films and nineties_films and teen_films and coming_of_age_films and comedy_films\n```"
    },
    "what are Films set in Libya that are not set in Tunisia": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: what are Films set in Libya that are not set in Tunisia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Non-science-fiction non-comedy animated science fantasy films made in America": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Non-science-fiction non-comedy animated science fantasy films made in America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "adventure horror films that arent american": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: adventure horror films that arent american\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Russian empire films that are not in black and white.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Russian empire films that are not in black and white.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films",
        "pred": "```python\nquestion = 'Russian empire films that are not in black and white'\n\n# Define the subquestions\nrussian_empire_films = 'Russian empire films'\nblack_and_white_films = 'films in black and white'\n\n# Combine using the correct logical operator if needed\nanswer = russian_empire_films and not black_and_white_films\n```"
    },
    "Films, but not North African campaign films, set in Libya": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Films, but not North African campaign films, set in Libya\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Films set in Hiroshima Prefecture, excluding films about the Pacific War": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Films set in Hiroshima Prefecture, excluding films about the Pacific War\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Hungarian non-Austrian silent films": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Hungarian non-Austrian silent films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "what are English-language Romanian films that are not Films shot in Europe": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: what are English-language Romanian films that are not Films shot in Europe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Penal system documentary films that are not about law enforcement in the United States": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Penal system documentary films that are not about law enforcement in the United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films",
        "pred": "```python\nquestion = 'Penal system documentary films that are not about law enforcement in the United States'\n\n# Define the subquestions\npenal_system_documentaries = 'Penal system documentary films'\nlaw_enforcement_us = 'law enforcement in the United States'\n\n# Combine using the correct logical operator if needed\nanswer = penal_system_documentaries and not law_enforcement_us\n```"
    },
    "Documentary films about elections but not about the United States": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Documentary films about elections but not about the United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Films based on works by Bill Finger that are any genre except Animated action films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Films based on works by Bill Finger that are any genre except Animated action films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Films based on works by Arthur Conan Doyle but not mystery novels": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Films based on works by Arthur Conan Doyle but not mystery novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films",
        "pred": "```python\nquestion = 'Films based on works by Arthur Conan Doyle but not mystery novels'\n\n# Define the subquestions\narthur_conan_doyle_films = 'Films based on works by Arthur Conan Doyle'\nmystery_novels = 'mystery novels'\n\n# Combine using the correct logical operator if needed\nanswer = arthur_conan_doyle_films and not mystery_novels\n```"
    },
    "Non-dance gymnastics films": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Non-dance gymnastics films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Horror war films excluding Films about political repression": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Horror war films excluding Films about political repression\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Czech WWII films, not about totalitarianism": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Czech WWII films, not about totalitarianism\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Films that are featuring pets, but not Canis": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Films that are featuring pets, but not Canis\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Non-silent and non-drama lost films from 1910": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Non-silent and non-drama lost films from 1910\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Non-American documentary films about elections": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Non-American documentary films about elections\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Non-Canadian documentary films about Indigenous peoples in Canada": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Non-Canadian documentary films about Indigenous peoples in Canada\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Soviet crime films that arent russian made": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Soviet crime films that arent russian made\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Beatles in film that are not biographical films.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Beatles in film that are not biographical films.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "1960s sex comedy, but not American, films": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 1960s sex comedy, but not American, films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Non American teen superhero films": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Non American teen superhero films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "what are some Films about bats that are not Superhero films": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: what are some Films about bats that are not Superhero films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Films about bats, but not death": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Films about bats, but not death\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Adventure horror films not based on folklore": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Adventure horror films not based on folklore\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "1930 non american crime films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 1930 non american crime films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Belgian comedy-drama films that aren't French": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Belgian comedy-drama films that aren't French\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Documentary films about the penal system that arent about the united states": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Documentary films about the penal system that arent about the united states\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Animated non-children films set in New York (state)": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Animated non-children films set in New York (state)\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "1940 crime comedy films that are not American crime films.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 1940 crime comedy films that are not American crime films.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Non-English-language Canadian action thriller films": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Non-English-language Canadian action thriller films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Non-American Horror films about clowns": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Non-American Horror films about clowns\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films",
        "pred": "```python\nquestion = 'Non-American Horror films about clowns'\n\n# Define the subquestions\nnon_american_horror_films = 'Non-American Horror films'\nclowns = 'films about clowns'\n\n# Combine using the correct logical operator if needed\nanswer = non_american_horror_films and clowns\n```"
    },
    "Films set in Hiroshima Prefecture, but not set in the Sh\u014dwa period.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Films set in Hiroshima Prefecture, but not set in the Sh\u014dwa period.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Non American independent films that are from 1994": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Non American independent films that are from 1994\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Hong Kong supernatural films based on folklore": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Hong Kong supernatural films based on folklore\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Documentary films about Afghanistan, that aren't about terrorism": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Documentary films about Afghanistan, that aren't about terrorism\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Superhero, but not sci-fi, crossover films": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Superhero, but not sci-fi, crossover films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films",
        "pred": "```python\nquestion = 'Superhero, but not sci-fi, crossover films'\n\n# Define the subquestions\nsuperhero_films = 'Superhero films'\nnot_scifi = 'not sci-fi'\ncrossover_films = 'crossover films'\n\n# Combine using the correct logical operator if needed\nanswer = superhero_films and not_scifi and crossover_films\n```"
    },
    "Board game films that are not about sports": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Board game films that are not about sports\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Films about proms excluding American teen films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Films about proms excluding American teen films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Non Science fiction Films based on novellas": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Non Science fiction Films based on novellas\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Films shot in Iraq, but not about Iraq war": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Films shot in Iraq, but not about Iraq war\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "2000s non-action vigilante films.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 2000s non-action vigilante films.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Non-action Masala films in the 1990s.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Non-action Masala films in the 1990s.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Films set in 1918 that excluding War films": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Films set in 1918 that excluding War films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Documentaries about Afghanistan, but are not about historical events": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Documentaries about Afghanistan, but are not about historical events\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Nigerian romance films that are not dramas": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Nigerian romance films that are not dramas\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Documentary films about adolescence but not education": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Documentary films about adolescence but not education\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Films that are about the radio, but not mass media people": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Films that are about the radio, but not mass media people\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Supernatural films from Hong Kong that are not about legendary creatures": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Supernatural films from Hong Kong that are not about legendary creatures\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Young adult literature based films that aren't teen films": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Young adult literature based films that aren't teen films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "1990s non-American sports comedy films": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1990s non-American sports comedy films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "films sent in libya not in 1940": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: films sent in libya not in 1940\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Films that are about mobile phones, but not the internet": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Films that are about mobile phones, but not the internet\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Non-American 1910's war drama films": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Non-American 1910's war drama films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Belgian comedy-drama films": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Belgian comedy-drama films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films",
        "pred": "```python\nquestion = 'Belgian comedy-drama films'\n\n# Define the subquestion\nbelgian_films = 'Belgian films'\ncomedy_drama = 'comedy-drama films'\n\n# Combine using the correct logical operator if needed\nanswer = belgian_films and comedy_drama\n```"
    },
    "Vigilante films based in Hong Kong that exclude martial arts.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Vigilante films based in Hong Kong that exclude martial arts.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films",
        "pred": "```python\nquestion = 'Vigilante films based in Hong Kong that exclude martial arts'\n\n# Define the subquestions\nvigilante_films_hong_kong = 'Vigilante films based in Hong Kong'\nexclude_martial_arts = 'exclude martial arts'\n\n# Combine using the correct logical operator if needed\nanswer = vigilante_films_hong_kong and not exclude_martial_arts\n```"
    },
    "1940s animated films, excluding American animated films": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 1940s animated films, excluding American animated films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "movies based on novellas that arent about scientists": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: movies based on novellas that arent about scientists\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Non- drama Indian family films.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Non- drama Indian family films.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "what are  Films based on works by Arthur Conan Doyle that are not set in England": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: what are  Films based on works by Arthur Conan Doyle that are not set in England\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "films"
    },
    "Dutch silent films based on novels": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Dutch silent films based on novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "1950's comedy films set in Yugoslavia": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 1950's comedy films set in Yugoslavia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "2016 Danish documentary films": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 2016 Danish documentary films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films",
        "pred": "```python\nquestion = '2016 Danish documentary films'\n\n# Define the subquestions\ndanish_films = 'Danish films'\ndocumentary_films = 'documentary films'\nyear_2016 = '2016'\n\n# Combine using the correct logical operator if needed\nanswer = danish_films and documentary_films and year_2016\n```"
    },
    "Prison films set in Israel": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Prison films set in Israel\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "Action adventure films in the 2010s about discrimination.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Action adventure films in the 2010s about discrimination.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "2012 comedy films that are also about social issues in the United States.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 2012 comedy films that are also about social issues in the United States.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "Films about sportspeople set in 1972": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Films about sportspeople set in 1972\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "Propaganda films that are epic and based on actual events.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Propaganda films that are epic and based on actual events.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "1966 epic films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 1966 epic films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films",
        "pred": "```python\nquestion = '1966 epic films'\n\n# Define the subquestions\nyear_1966 = 1966\nfilm_genre_epic = 'epic films'\n\n# Combine using the correct logical operator if needed\nanswer = year_1966 and film_genre_epic\n```"
    },
    "Indian biographical drama films about mental states": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Indian biographical drama films about mental states\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "1990s comedy horror films that are set in Los Angeles County California": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1990s comedy horror films that are set in Los Angeles County California\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films",
        "pred": "```python\nquestion = '1990s comedy horror films that are set in Los Angeles County California'\n\n# Define the subquestions\ncomedy_horror_films_1990s = '1990s comedy horror films'\nlos_angeles_county_california = 'films set in Los Angeles County California'\n\n# Combine using the correct logical operator if needed\nanswer = comedy_horror_films_1990s and los_angeles_county_california\n```"
    },
    "2012 short film documentaries about the human body": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 2012 short film documentaries about the human body\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films",
        "pred": "```python\nquestion = '2012 short film documentaries about the human body'\n\n# Define the subquestions\nyear_2012 = '2012 short film documentaries'\nhuman_body_documentaries = 'about the human body'\n\n# Combine using the correct logical operator if needed\nanswer = year_2012 and human_body_documentaries\n```"
    },
    "1914 films set in Paris": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 1914 films set in Paris\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "1985 drama films based on multiple works": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 1985 drama films based on multiple works\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "2010s legal mystery drama films": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 2010s legal mystery drama films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "1980's sci-fi films set on Islands": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 1980's sci-fi films set on Islands\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "Film franchises that are also Canadian supernatural horror": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Film franchises that are also Canadian supernatural horror\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "2000's American narrative comedy films that are nonlinear": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 2000's American narrative comedy films that are nonlinear\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "Films about infidelity shot in Oxfordshire": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Films about infidelity shot in Oxfordshire\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "American World War II films shot in Los Angeles County California": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: American World War II films shot in Los Angeles County California\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "2004 films that are set in 1974": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 2004 films that are set in 1974\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "1990 Australian thriller films": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 1990 Australian thriller films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "2021 comedy films with werewolves": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 2021 comedy films with werewolves\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "Swiss Films about stalking": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Swiss Films about stalking\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "2004 romantic drama films about media": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 2004 romantic drama films about media\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films",
        "pred": "question = '2004 romantic drama films about media'\n\n# Define the subquestions\nfilms_2004 = '2004 films'\nromantic_drama_films = 'romantic drama films'\nmedia_films = 'films about media'\n\n# Combine using the correct logical operator if needed\nanswer = films_2004 and romantic_drama_films and media_films"
    },
    "Live-action Buddy films based on comics.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Live-action Buddy films based on comics.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "1942 drama films that are set in the 1930's": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1942 drama films that are set in the 1930's\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "2010's films about revolutions": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 2010's films about revolutions\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "2001 English-language Canadian romantic comedy films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 2001 English-language Canadian romantic comedy films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "2000's films set in Liverpool": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 2000's films set in Liverpool\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "1940s World War II adventure/spy films": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 1940s World War II adventure/spy films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "Supernatural horror films in the Artic": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Supernatural horror films in the Artic\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "German films about prostitution in English": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: German films about prostitution in English\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "Heavy metal films about musical groups": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Heavy metal films about musical groups\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films",
        "pred": "```python\nquestion = 'Heavy metal films about musical groups'\n \n# Define the subquestions\nheavy_metal_films = 'Heavy metal films'\nmusical_groups = 'musical groups'\n \n# Combine using the correct logical operator if needed\nanswer = heavy_metal_films and musical_groups\n```"
    },
    "1990s drama films shot in Rajasthan": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 1990s drama films shot in Rajasthan\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "1972 comedy films about entertainers": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 1972 comedy films about entertainers\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "2000s horror thriller films set in schools": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 2000s horror thriller films set in schools\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "2010s jukebox musical films that are political": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 2010s jukebox musical films that are political\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "Anti-war films about rebellions": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Anti-war films about rebellions\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films",
        "pred": "```python\ninstruction = 'Anti-war films about rebellions'\n\n# Define the subinstructions\nanti_war_films = 'Anti-war films'\nrebellions = 'films about rebellions'\n\n# Combine using the correct logical operator if needed\nanswer = anti_war_films and rebellions\n```"
    },
    "American police detective films set in Florida.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: American police detective films set in Florida.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "1990s children's film set in a fictional location.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 1990s children's film set in a fictional location.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "Films based on European myths and legends and young adult literature": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Films based on European myths and legends and young adult literature\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "Films set in Italy that are 1982 television films": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Films set in Italy that are 1982 television films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "1980 drama Bangladeshi films": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 1980 drama Bangladeshi films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "Supernatural western horror films from the 1990's": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Supernatural western horror films from the 1990's\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films",
        "pred": "```python\nquestion = \"Supernatural western horror films from the 1990's\"\n\n# Define the subquestions\nsupernatural_horror_films = 'Supernatural horror films'\nwestern_films = \"Western films\"\nnineties = \"from the 1990's\"\n\n# Combine using the correct logical operator if needed\nanswer = supernatural_horror_films and western_films and nineties\n```"
    },
    "1960s romantic drama English-language Canadian films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 1960s romantic drama English-language Canadian films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "2010s police and robbery films.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 2010s police and robbery films.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "2010s supernatural children's animated films": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 2010s supernatural children's animated films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "2010's political films shot in Dubai": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 2010's political films shot in Dubai\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "Year 2000 American action comedy films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Year 2000 American action comedy films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "2010's erotic romantic thriller films": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 2010's erotic romantic thriller films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "American drama films set in 1917": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: American drama films set in 1917\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "1987 political drama films": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 1987 political drama films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "Films about invasions shot in Bulgaria": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Films about invasions shot in Bulgaria\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "Films that are about higher education and the military": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Films that are about higher education and the military\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films",
        "pred": "```python\nquestion = 'Films that are about higher education and the military'\n\n# Define the subquestions\nhigher_education_films = 'Films about higher education'\nmilitary_films = 'Films about the military'\n\n# Combine using the correct logical operator if needed\nanswer = higher_education_films and military_films\n```"
    },
    "1930s American children's fantasy musical films.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 1930s American children's fantasy musical films.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films",
        "pred": "```python\nquestion = \"1930s American children's fantasy musical films\"\n\n# Define the subquestions\nyear_1930s = \"1930s films\"\namerican_films = \"American films\"\nchildren_fantasy_films = \"children's fantasy films\"\nmusical_films = \"musical films\"\n\n# Combine using the correct logical operator if needed\nanswer = year_1930s and american_films and children_fantasy_films and musical_films\n```"
    },
    "Films about sisters shot in Paris.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Films about sisters shot in Paris.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films",
        "pred": "```python\nquestion = 'Films about sisters shot in Paris'\n\n# Define the subquestions\nfilms_about_sisters = 'Films about sisters'\nshot_in_paris = 'shot in Paris'\n \n# Combine using the correct logical operator if needed\nanswer = films_about_sisters and shot_in_paris\n```"
    },
    "French crime female buddy films": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: French crime female buddy films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "Films about women and computing in the United States": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Films about women and computing in the United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "German comedy films about emotions": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: German comedy films about emotions\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "1940s comedy drama films shot in Europe": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 1940s comedy drama films shot in Europe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "2014 comedy-drama films shot in Paris": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 2014 comedy-drama films shot in Paris\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "2000s American silent short films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 2000s American silent short films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "Films about exorcism and adventure.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Films about exorcism and adventure.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "Films about anti-fascism and sexuality": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Films about anti-fascism and sexuality\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "Films about filmmaking whose write won the best Screenplay BAFTA Award": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Films about filmmaking whose write won the best Screenplay BAFTA Award\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "2021 Family/Romance films": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 2021 Family/Romance films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "American biographical drama films shot in the Philippines": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: American biographical drama films shot in the Philippines\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films",
        "pred": "```python\nquestion = 'American biographical drama films shot in the Philippines'\n\n# Define the subquestions\namerican_biographical_drama_films = 'American biographical drama films'\nshot_in_philippines = 'shot in the Philippines'\n\n# Combine using the correct logical operator if needed\nanswer = american_biographical_drama_films and shot_in_philippines\n```"
    },
    "1970's crime comedy films that are sequels": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 1970's crime comedy films that are sequels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films",
        "pred": "```python\nquestion = \"1970's crime comedy films that are sequels\"\n\n# Define the subquestions\ncrime_comedy_films = \"1970's crime comedy films\"\nsequels = \"sequels\"\n\n# Combine using the correct logical operator if needed\nanswer = crime_comedy_films and sequels\n```"
    },
    "2010 biographical drama films about American politicians.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 2010 biographical drama films about American politicians.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "Buddy film shots in Detroit.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Buddy film shots in Detroit.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "Canadian short films about literature": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Canadian short films about literature\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "films"
    },
    "post-apocalyptic Czech films": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: post-apocalyptic Czech films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Documentary films from Dominican Republic": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Documentary films from Dominican Republic\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films",
        "pred": "```python\nquestion = 'Documentary films from Dominican Republic'\n\n# Define the subquestion\ndocumentary_films_dominican_republic = 'Documentary films from Dominican Republic'\n\n# No further combination needed\nanswer = documentary_films_dominican_republic\n```"
    },
    "sci-fi films from 2008": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: sci-fi films from 2008\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "John D MacDonald works adapted into films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: John D MacDonald works adapted into films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "mystery drama films that are Chinese": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: mystery drama films that are Chinese\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Biographical films about Mexico": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Biographical films about Mexico\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Venezuelan lost films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Venezuelan lost films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films",
        "pred": "```python\ninstruction = 'Venezuelan lost films'\n\n# Since the instruction does not have specific subquestions to combine, we can directly use the given instruction as the answer\nanswer = instruction\n```"
    },
    "Accountant films.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Accountant films.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films",
        "pred": "```python\nquestion = 'Accountant films'\n\n# Define the subquestions\naccountant_films = 'films about accountants'\naccountant_movies = 'movies about accountants'\n\n# Combine using the correct logical operator if needed\nanswer = accountant_films or accountant_movies\n```"
    },
    "Cannabis themed Indian films": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Cannabis themed Indian films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Political comedy films in the 1940s.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Political comedy films in the 1940s.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "2021 films about action and comedy.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 2021 films about action and comedy.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films",
        "pred": "```python\nquestion = '2021 films about action and comedy'\n\n# Define the subquestions\naction_films = 'films about action'\ncomedy_films = 'films about comedy'\nyear_2021 = '2021 films'\n\n# Combine using the correct logical operator if needed\nanswer = year_2021 and action_films and comedy_films\n```"
    },
    "Films set in the year 2073": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Films set in the year 2073\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films",
        "pred": "```python\nquestion = 'Films set in the year 2073'\n\n# Define the subquestions\nfilms_2073 = 'Films set in the year 2073'\n \n# Combine using the correct logical operator if needed\nanswer = films_2073\n```"
    },
    "Other languages of Punjabi films remade": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Other languages of Punjabi films remade\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films",
        "pred": "```python\nquestion = 'Other languages of Punjabi films remade'\n\n# Define the subquestions\npunjabi_films = 'Punjabi films'\nremade_films = 'films remade in other languages'\n\n# Combine using the correct logical operator if needed\nanswer = punjabi_films and remade_films\n```"
    },
    "Films about the mass media in the UK": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Films about the mass media in the UK\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Sports comedy films from Sweden.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Sports comedy films from Sweden.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "2016 fantasy movies": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 2016 fantasy movies\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Capua Films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Capua Films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "what are some 2020 3D films?": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: what are some 2020 3D films?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Saga Prefecture set films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Saga Prefecture set films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Hong Kong horror/thriller films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Hong Kong horror/thriller films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Documentary films about Rwanda": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Documentary films about Rwanda\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Japanese films about prison": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Japanese films about prison\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films",
        "pred": "```python\nquestion = 'Japanese films about prison'\n\n# Define the subquestions\njapanese_films = 'Japanese films'\nprison = 'prison'\n\n# Combine using the correct logical operator if needed\nanswer = japanese_films and prison\n```"
    },
    "Comedy-drama films about the Italian War.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Comedy-drama films about the Italian War.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Historical films from Colombia": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Historical films from Colombia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Croatian biographical films": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Croatian biographical films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "antisemitic films that promote nazi ideals.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: antisemitic films that promote nazi ideals.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Western genre films from 1992": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Western genre films from 1992\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Comedy thriller films from the 1970's": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Comedy thriller films from the 1970's\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Cebu films": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Cebu films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Dutch films about World War II": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Dutch films about World War II\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films",
        "pred": "```python\nquestion = 'Dutch films about World War II'\n\n# Define the subquestions\ndutch_films = 'Dutch films'\nworld_war_ii = 'World War II'\n\n# Combine using the correct logical operator if needed\nanswer = dutch_films and world_war_ii\n```"
    },
    "movies filmed in Krasnodar Krai": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: movies filmed in Krasnodar Krai\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Corpus Christi Texas shot films": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Corpus Christi Texas shot films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Mystery comedy-drama films in the 2010s.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Mystery comedy-drama films in the 2010s.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Western films from 2006": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Western films from 2006\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Films from Tanzania": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Films from Tanzania\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Films about Hong Kong sports.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Films about Hong Kong sports.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Romantic comedy films from 1925": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Romantic comedy films from 1925\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Thriller films from 1938": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Thriller films from 1938\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "what are some  Italian war comedy films": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: what are some  Italian war comedy films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Films adapted from the novel Ramona by Helen Hunt Jackson": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Films adapted from the novel Ramona by Helen Hunt Jackson\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Short films about the Pakistani.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Short films about the Pakistani.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "exploitation films from the 1940s": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: exploitation films from the 1940s\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Robert Nathan films": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Robert Nathan films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "South Korean films about aviation": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: South Korean films about aviation\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Romantic comedy Danish films": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Romantic comedy Danish films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "honor killing documentary films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: honor killing documentary films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Japanese films about Christmas": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Japanese films about Christmas\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Films based of Craig Rices' work": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Films based of Craig Rices' work\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "WWII films that are Swiss": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: WWII films that are Swiss\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "What are some 1930s political comedy-drama films?": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: What are some 1930s political comedy-drama films?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Erico Verissimo works adapted into films": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Erico Verissimo works adapted into films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Switzerland documentary films": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Switzerland documentary films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Comedy-drama films from Emirati": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Comedy-drama films from Emirati\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "2001 Sci-fi movies": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 2001 Sci-fi movies\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "1936 Winter Olympics films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 1936 Winter Olympics films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "supernatural thriller films that are British": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: supernatural thriller films that are British\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "teen drama films from canada": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: teen drama films from canada\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "1948 Palestinian exodus films": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 1948 Palestinian exodus films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "What are some films set in 18th-century Qing dynasty?": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: What are some films set in 18th-century Qing dynasty?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "what are some Mexican animated horror films": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: what are some Mexican animated horror films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "what are some Films set in Dehradun": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: what are some Films set in Dehradun\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Greece documentary films": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Greece documentary films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Aquarium set films": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Aquarium set films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Northern Mariana Islands set films": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Northern Mariana Islands set films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "what are some Flamenco films": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: what are some Flamenco films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Films from Republic of the Congo": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Films from Republic of the Congo\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "Christmas comedy-drama films from Britain": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Christmas comedy-drama films from Britain\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "films"
    },
    "what are some 2010's Comedy drama films set in the united states in 2006?": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: what are some 2010's Comedy drama films set in the united states in 2006?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "Canadian documentaries about homelessness and LGBT": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Canadian documentaries about homelessness and LGBT\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "Medical-themed films set in Tokyo about organized crime": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Medical-themed films set in Tokyo about organized crime\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "Horror anthology films about time travel that were shot in the US": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Horror anthology films about time travel that were shot in the US\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "2010's American exploitation drama films about bullying": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 2010's American exploitation drama films about bullying\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "1990's historical films about security and surveillance that are set in England": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 1990's historical films about security and surveillance that are set in England\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "West German/French films that are sci-fi": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: West German/French films that are sci-fi\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "1970s crime films set on islands about entertainers": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 1970s crime films set on islands about entertainers\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "Dutch documentary films set in the Netherlands about the Holocaust": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Dutch documentary films set in the Netherlands about the Holocaust\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "1950s short films that are both 1950s animated short films and 1958 comedy films": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 1950s short films that are both 1950s animated short films and 1958 comedy films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "Australian children's drama films about food and drink": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Australian children's drama films about food and drink\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "NBC network original films about ideologies that are set in outer space.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: NBC network original films about ideologies that are set in outer space.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "LGBT-related romantic drama films that are also about social class": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: LGBT-related romantic drama films that are also about social class\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "Remakes of Indian films that are sequels and are also Telugu films remade in other languages": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Remakes of Indian films that are sequels and are also Telugu films remade in other languages\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "Short films based of comics by bob kane": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Short films based of comics by bob kane\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "Films set in Hong Kong that are romantic drama 1955 films": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Films set in Hong Kong that are romantic drama 1955 films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "2010s Brazilian teen comedy/drama films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 2010s Brazilian teen comedy/drama films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "2010s American independent films about the Olympic Games": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 2010s American independent films about the Olympic Games\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "Children's buddy fantasy films about rodents that are from the 2000's": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Children's buddy fantasy films about rodents that are from the 2000's\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "1990s Indian and folklore romance films.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1990s Indian and folklore romance films.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "2010s biographical films based on books and set in Boston": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 2010s biographical films based on books and set in Boston\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "American adventure drama films that are war epic.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: American adventure drama films that are war epic.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "Iranian and Asian short films from 2010's": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Iranian and Asian short films from 2010's\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "Buddy comedy films about the media that were shot in LA, California": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Buddy comedy films about the media that were shot in LA, California\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "American Christmas/Romance films about sleep": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: American Christmas/Romance films about sleep\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "1920's drama films set in Andalusia": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 1920's drama films set in Andalusia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "Films based on music that are both Italian comedy films and North American films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Films based on music that are both Italian comedy films and North American films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "2000s fantasy films about friendship and dogs": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 2000s fantasy films about friendship and dogs\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "Japanese science fiction action films based on legends set in the Southwestern United States": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Japanese science fiction action films based on legends set in the Southwestern United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "American Science fiction children's comedy films set in castles.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: American Science fiction children's comedy films set in castles.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "American teen horror high school films set in the 2000s": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: American teen horror high school films set in the 2000s\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "1940s adventure films about science set in the 1790s": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 1940s adventure films about science set in the 1790s\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "Documentaries about television personas, automobiles, and business": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Documentaries about television personas, automobiles, and business\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "American 1990s sequel children's animated films that are about families": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: American 1990s sequel children's animated films that are about families\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "Survival films about fictional presidents of the United States": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Survival films about fictional presidents of the United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "2012 romantic comedy films set in North American that are 2010s coming-of-age comedy films": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 2012 romantic comedy films set in North American that are 2010s coming-of-age comedy films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "Animated American Western (genre) children's adventure films": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Animated American Western (genre) children's adventure films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "1970s mystery films that are also American thriller and supernatural films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1970s mystery films that are also American thriller and supernatural films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "20th-century Italian romantic drama films that are based on novels": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 20th-century Italian romantic drama films that are based on novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "1990s and 1999 Indian crime action films.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 1990s and 1999 Indian crime action films.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "British comedy films that include orphans and child abuse.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: British comedy films that include orphans and child abuse.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "2010s action horror films about transport and monsters": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 2010s action horror films about transport and monsters\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "1943 paranormal drama films about astronomy": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 1943 paranormal drama films about astronomy\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "2000s science fiction comedy and adventure films about science.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 2000s science fiction comedy and adventure films about science.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "Action films set in Paris about nuclear war and weapons": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Action films set in Paris about nuclear war and weapons\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "Films shot in Europe that are Austrian drama films and English language French films.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Films shot in Europe that are Austrian drama films and English language French films.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "Historical Chinese martial arts films about terrorism": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Historical Chinese martial arts films about terrorism\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "1976 Asian horror remakes of Indian films": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 1976 Asian horror remakes of Indian films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "North American post-apocalyptic disaster films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: North American post-apocalyptic disaster films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "2010s Zombie sci-fi American drama comedy films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 2010s Zombie sci-fi American drama comedy films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "2010s thriller films about dysfunctional families": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 2010s thriller films about dysfunctional families\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "1970s television films set in Palestine about terrorism": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1970s television films set in Palestine about terrorism\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "1980s political films about science and the United States Armed Forces": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1980s political films about science and the United States Armed Forces\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "American Christmas horror films from 2010's that are about cults": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: American Christmas horror films from 2010's that are about cults\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "2020 thriller and violence films based on an American novel.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 2020 thriller and violence films based on an American novel.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "1996 and 1990s security and surveillance horror films": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 1996 and 1990s security and surveillance horror films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "Black-and-white films set in Oceania that are also American multilingual": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Black-and-white films set in Oceania that are also American multilingual\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "Stop-motion animated paranormal musical comedy films": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Stop-motion animated paranormal musical comedy films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "North American 2000s action adventure films about social issues": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: North American 2000s action adventure films about social issues\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "what are some 1950s war crime dramas about technology.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: what are some 1950s war crime dramas about technology.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "films"
    },
    "American historical films set in the British Empire that exclude security and surveillance.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: American historical films set in the British Empire that exclude security and surveillance.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Vietnamese films based on literature but not about the Cold War": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Vietnamese films based on literature but not about the Cold War\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "2010s Post-apocalyptic action films that are not American sci-fi": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 2010s Post-apocalyptic action films that are not American sci-fi\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "1980s action films that are also Italian films excluding Italian action films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 1980s action films that are also Italian films excluding Italian action films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "2010s television films shot in British Columbia but not in Vancouver": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 2010s television films shot in British Columbia but not in Vancouver\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "American romance films about discrimination that aren't dramas": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: American romance films about discrimination that aren't dramas\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Literature transport films that are not about the media.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Literature transport films that are not about the media.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Japanese science fiction films that are also Superhero films excluding Kaiju films": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Japanese science fiction films that are also Superhero films excluding Kaiju films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Non-American prison films that are American comedy films.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Non-American prison films that are American comedy films.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Films about women in the United States set in New York(state) but not about prostitution": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Films about women in the United States set in New York(state) but not about prostitution\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "2010's bangladeshi romance films that arent dramas": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 2010's bangladeshi romance films that arent dramas\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Indigenous films that are also Biographical drama films excluding Indian biographical drama films": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Indigenous films that are also Biographical drama films excluding Indian biographical drama films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Documentary films about law enforcement and the penal system in any country besides the US": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Documentary films about law enforcement and the penal system in any country besides the US\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Non-English Canadian films about comedy and crime.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Non-English Canadian films about comedy and crime.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Hindi-language action films filled with crime but not Indian vigilante": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Hindi-language action films filled with crime but not Indian vigilante\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "American crime comedy films based on actual events that aren't about the American Mafia": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: American crime comedy films based on actual events that aren't about the American Mafia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "American neo-noir films that are also Films about social issues in the United States excluding Films about organized crime": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: American neo-noir films that are also Films about social issues in the United States excluding Films about organized crime\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "1890's short documentary films, that aren't in black-and-white": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 1890's short documentary films, that aren't in black-and-white\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Non drama Soviet black-and-white films about communism.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Non drama Soviet black-and-white films about communism.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Film franchises that are also Films about murderers excluding Slasher films": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Film franchises that are also Films about murderers excluding Slasher films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "American action thriller films about drugs, but not organized crime": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: American action thriller films about drugs, but not organized crime\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Films set in the Southwestern United States about ideologies but not about totalitarianism": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Films set in the Southwestern United States about ideologies but not about totalitarianism\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "2010's Nigerian romance films that don't involve romantic drama fields.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 2010's Nigerian romance films that don't involve romantic drama fields.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Social sci-fi fiction films about time travel, but not survival": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Social sci-fi fiction films about time travel, but not survival\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "3D films about revenge, excluding American vigilante films.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 3D films about revenge, excluding American vigilante films.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "American sequel films set in jungles but are not about orphans": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: American sequel films set in jungles but are not about orphans\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "2017 documentary films about mass media people but not about music and musicians": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 2017 documentary films about mass media people but not about music and musicians\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Courtroom films about prisons that don't discuss racism": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Courtroom films about prisons that don't discuss racism\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "1960s drama films that are also Films about violence excluding Films about human rights": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 1960s drama films that are also Films about violence excluding Films about human rights\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Documentary films about energy and nuclear technology, but not war and weapons": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Documentary films about energy and nuclear technology, but not war and weapons\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "2000s supernatural and thriller films but are not horror": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 2000s supernatural and thriller films but are not horror\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Films that are shot in North America and in Japan, excluding Tokyo.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Films that are shot in North America and in Japan, excluding Tokyo.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "1930s musical films that are also 1938 musical films excluding 1938 comedy films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 1930s musical films that are also 1938 musical films excluding 1938 comedy films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "American animated adventure films about reptiles and amphibians, excluding films about dinosaurs.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: American animated adventure films about reptiles and amphibians, excluding films about dinosaurs.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "1930s musical films that are not 1931 comedy films": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 1930s musical films that are not 1931 comedy films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "2005 films set on any ocean except the Pacific Ocean": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 2005 films set on any ocean except the Pacific Ocean\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Chinese action Triad films not set in Hong Kong": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Chinese action Triad films not set in Hong Kong\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Vietnamese films based on literature that exclude films about security and surveillance.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Vietnamese films based on literature that exclude films about security and surveillance.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Self-reflexive films that are also British comedy films excluding Mockumentary films": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Self-reflexive films that are also British comedy films excluding Mockumentary films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Films shot in Surrey and not London, that were filmed in the 21st century": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Films shot in Surrey and not London, that were filmed in the 21st century\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "American science-fiction horror films based on science-fiction novels, excluding mad scientist films.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: American science-fiction horror films based on science-fiction novels, excluding mad scientist films.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "The Asylum films shot in North America but not shot in Los Angeles County California": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: The Asylum films shot in North America but not shot in Los Angeles County California\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "2010s historical war films but that are not dramas": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 2010s historical war films but that are not dramas\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Non American children's animated films about plants": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Non American children's animated films about plants\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Crime comedy films about finance, but not banking": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Crime comedy films about finance, but not banking\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "2000's dark fantasy films that aren't horror": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 2000's dark fantasy films that aren't horror\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "2010s documentary films set in New York City that are not about cities in the United States": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 2010s documentary films set in New York City that are not about cities in the United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "American science fantasy films that are also Animated science fantasy films excluding Science fiction comedy films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: American science fantasy films that are also Animated science fantasy films excluding Science fiction comedy films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Biographical films set in 1970's about entertainers who are not musicians": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Biographical films set in 1970's about entertainers who are not musicians\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Non-supernatural fantasy films about televised people": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Non-supernatural fantasy films about televised people\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Australian films about entertainers but not based on real people": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Australian films about entertainers but not based on real people\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Teen films about Jews and Judaism that aren't coming of age films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Teen films about Jews and Judaism that aren't coming of age films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Political horror war films but not about Nazism": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Political horror war films but not about Nazism\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "1990s Films set in England  but not London": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 1990s Films set in England  but not London\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Canadian speculative fiction films that are also medical themed but are not shot in canada.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Canadian speculative fiction films that are also medical themed but are not shot in canada.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Non-animated films based on DC Comics and Bill Finger's works but not about orphans": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Non-animated films based on DC Comics and Bill Finger's works but not about orphans\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "1970s European war drama films excluding World War II.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 1970s European war drama films excluding World War II.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "2010's action fantasy adventure films that aren't american": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 2010's action fantasy adventure films that aren't american\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "1990s American buddy action, but not comedy, films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1990s American buddy action, but not comedy, films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "German historical films based on music but not operetta films": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: German historical films based on music but not operetta films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "2011 films about education but not set in schools": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 2011 films about education but not set in schools\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "French black-and-white films set in the 19th century, excluding drama films.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: French black-and-white films set in the 19th century, excluding drama films.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Films about Jews and Judaism and games but not antisemitism": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Films about Jews and Judaism and games but not antisemitism\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Films about games and the film industry, but not filmmaking": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Films about games and the film industry, but not filmmaking\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "films"
    },
    "Czech LGBT-related or Czech biographical drama films or biographical films about people convicted on terrorism charges": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Czech LGBT-related or Czech biographical drama films or biographical films about people convicted on terrorism charges\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Animated short films based on comics, Spanish fantasy adventure films, or  Spanish 3D films.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Animated short films based on comics, Spanish fantasy adventure films, or  Spanish 3D films.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Canadian science fiction, adventure, comedy films or, South Korean fantasy comedy films.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Canadian science fiction, adventure, comedy films or, South Korean fantasy comedy films.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Political drama films from Germany, or political comedy or political drama films from the 1940s": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Political drama films from Germany, or political comedy or political drama films from the 1940s\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Films shot in Rio Grande do Norte, Brazilian science fiction or, Monica's Gang films.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Films shot in Rio Grande do Norte, Brazilian science fiction or, Monica's Gang films.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Films based on works by Alan Moore or Wildstorm titles, or that are Czech superhero films": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Films based on works by Alan Moore or Wildstorm titles, or that are Czech superhero films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "2023 action comedy, 2020s superhero comedy, or Guardians of the Galaxy films": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 2023 action comedy, 2020s superhero comedy, or Guardians of the Galaxy films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Films set in ancient Persia, Dutch biographical drama films, or Israeli historical drama films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Films set in ancient Persia, Dutch biographical drama films, or Israeli historical drama films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Political satire films from Australia or science fiction films from Finland or films set in Hesse": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Political satire films from Australia or science fiction films from Finland or films set in Hesse\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Films about the Serer people or the Haitian Revolution or Senegalese drama films": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Films about the Serer people or the Haitian Revolution or Senegalese drama films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Political satire films from Australia or Germany, or alternative history films from Australia": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Political satire films from Australia or Germany, or alternative history films from Australia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "what are some Documentary films about Paris, swedish short films, or about playwrights?": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: what are some Documentary films about Paris, swedish short films, or about playwrights?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Hungarian WWII or Biographical drama films, or Romanian historical drama films": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Hungarian WWII or Biographical drama films, or Romanian historical drama films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "British films about World War I or British army films or Battle of France films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: British films about World War I or British army films or Battle of France films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "2020's British animated films, animated sci-fi fiction films, or cartoon Saloon films": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 2020's British animated films, animated sci-fi fiction films, or cartoon Saloon films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "New Zealand science fiction thriller films, films shot in Gauteng, or New Zealand post-apocalyptic films.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: New Zealand science fiction thriller films, films shot in Gauteng, or New Zealand post-apocalyptic films.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Films shot in Gauteng or New Zealand action thrillers or Western films from South Africa": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Films shot in Gauteng or New Zealand action thrillers or Western films from South Africa\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Documentary films about McDonald's, sugar, or obesity": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Documentary films about McDonald's, sugar, or obesity\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Australian political satire,  Alternate Nazi German, or shot in Hesse films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Australian political satire,  Alternate Nazi German, or shot in Hesse films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Hong Kong auto racing films or films that are set in Gunma Prefecture or Toyama Prefecture": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Hong Kong auto racing films or films that are set in Gunma Prefecture or Toyama Prefecture\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "British spy action films, or Second Boer War films, or Films set in Basilicata": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: British spy action films, or Second Boer War films, or Films set in Basilicata\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "2020s teen fantasy, American urban fantasy, or Russian children's adventure films": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 2020s teen fantasy, American urban fantasy, or Russian children's adventure films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Polish animated sci-fi, Japanese fantasy action, or about Eulipotyphla films": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Polish animated sci-fi, Japanese fantasy action, or about Eulipotyphla films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "2023 thrillers, Upcoming IMAX, or Animated Superman films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 2023 thrillers, Upcoming IMAX, or Animated Superman films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Spanish action drama films, German action drama films, or films about Interpol": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Spanish action drama films, German action drama films, or films about Interpol\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Films set in Mindanao or shot in Valencia or that are Catalan films": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Films set in Mindanao or shot in Valencia or that are Catalan films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Dutch coming-of-age or Dutch erotic or erotic thriller films": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Dutch coming-of-age or Dutch erotic or erotic thriller films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Bulgarian biographical drama films or Films set in the 7th century or Bulgarian biographical films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Bulgarian biographical drama films or Films set in the 7th century or Bulgarian biographical films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Films shot in Fukuoka Prefecture, Japanese fantasy action films, or Films set in Miyagi Prefecture": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Films shot in Fukuoka Prefecture, Japanese fantasy action films, or Films set in Miyagi Prefecture\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Fantasy or multilingual films from Iceland, or Beowulf films": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Fantasy or multilingual films from Iceland, or Beowulf films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "what are some Japanese rock music films, Japanese robot films, or Japanese fantasy comedy films?": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: what are some Japanese rock music films, Japanese robot films, or Japanese fantasy comedy films?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Disaster films from the 1950s or The Last Days of Pompeii films of adventure films from 1913": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Disaster films from the 1950s or The Last Days of Pompeii films of adventure films from 1913\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "1990s horror dramas or Polish avant-garde experimental films or Polish animated science fiction films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 1990s horror dramas or Polish avant-garde experimental films or Polish animated science fiction films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "films shot in Hesse, set in Jersey City, or German Christmas drama": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: films shot in Hesse, set in Jersey City, or German Christmas drama\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "German films that are 2010's animations or computer animated, or Belgian adventure films": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: German films that are 2010's animations or computer animated, or Belgian adventure films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Films about the 1996 Summer Olympics or set in Leipzig or that are 1932 war films": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Films about the 1996 Summer Olympics or set in Leipzig or that are 1932 war films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "what are some Portuguese horror films,fantasy films or Zombie short films?": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: what are some Portuguese horror films,fantasy films or Zombie short films?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "what are Unofficial Batman films, Dark Horse Comics adapted into films, or Alien (franchise) films?": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: what are Unofficial Batman films, Dark Horse Comics adapted into films, or Alien (franchise) films?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "1930s war adventure films or French or Soviet war adventure films": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1930s war adventure films or French or Soviet war adventure films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Portuguese sci-fi films, LGBT-related sci-fi drama films, or French fantasy comedy-drama films": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Portuguese sci-fi films, LGBT-related sci-fi drama films, or French fantasy comedy-drama films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Cartoon Saloon films, Icelandic animated films, or Irish animated fantasy films": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Cartoon Saloon films, Icelandic animated films, or Irish animated fantasy films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Russian Superhero or crime action films or 2020s science fiction adventure films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Russian Superhero or crime action films or 2020s science fiction adventure films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "2020s vigilante or 2020 3D or Russian superhero films": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 2020s vigilante or 2020 3D or Russian superhero films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "what are some Danish black comedy, Greenlandic, or Films shot in Copenhag?": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: what are some Danish black comedy, Greenlandic, or Films shot in Copenhag?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "1980s science fiction comedy-drama films or Madison Wisconsin set films or science fiction from Hungary": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 1980s science fiction comedy-drama films or Madison Wisconsin set films or science fiction from Hungary\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Films about the 1988 or 1936 Winter Olympics, or about Olympic skiing": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Films about the 1988 or 1936 Winter Olympics, or about Olympic skiing\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Chinese historical adventure films or set in the 16th-century Ming dynasty or shot in Zhejiang": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Chinese historical adventure films or set in the 16th-century Ming dynasty or shot in Zhejiang\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Biographical films about Italian bandits, or films shot in Apulia or Basilicata": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Biographical films about Italian bandits, or films shot in Apulia or Basilicata\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Films shot in Gyeonggi Province, Twins in American, or 2022 crime action films?": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Films shot in Gyeonggi Province, Twins in American, or 2022 crime action films?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Films shot in Liaoning or Shandong, or 2023 sci-fi fiction action films": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Films shot in Liaoning or Shandong, or 2023 sci-fi fiction action films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Swiss crime, Swiss sequel, or Spanish vigilante films": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Swiss crime, Swiss sequel, or Spanish vigilante films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "1926 documentary films or shot in Samoa or English-language Samoan films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 1926 documentary films or shot in Samoa or English-language Samoan films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "what are some Films about computer hacking, Philippine erotic thrillers, or about the People's Liberation Army": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: what are some Films about computer hacking, Philippine erotic thrillers, or about the People's Liberation Army\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "American or French or 1950s historical fantasy films": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: American or French or 1950s historical fantasy films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Filipino teen drama, coming-of-age, or gangster films": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Filipino teen drama, coming-of-age, or gangster films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Bulgarian animated films or Polish or Belgian animated fantasy films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Bulgarian animated films or Polish or Belgian animated fantasy films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Films that are about Soviet sports comedy, 2020 sports comedy, or Russian sports comedy": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Films that are about Soviet sports comedy, 2020 sports comedy, or Russian sports comedy\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "South Korean historical comedy-drama films or Films set in Gwangju or 2000s historical comedy-drama films": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: South Korean historical comedy-drama films or Films set in Gwangju or 2000s historical comedy-drama films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "American films based on comics or films from the Predator or Alien franchises": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: American films based on comics or films from the Predator or Alien franchises\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Irish teen romantic comedy films or films based on Twelfth night.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Irish teen romantic comedy films or films based on Twelfth night.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Australian teen comedy or teen drama films or Australian sports comedy-drama films": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Australian teen comedy or teen drama films or Australian sports comedy-drama films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Science fiction action films or action thriller films from South Africa, or mutiny films": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Science fiction action films or action thriller films from South Africa, or mutiny films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "Belgian erotic films, or Danish nonlinear narrative films, or German science fiction drama films": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Belgian erotic films, or Danish nonlinear narrative films, or German science fiction drama films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "films"
    },
    "1914 British or science fiction novels": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 1914 British or science fiction novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Novels set in Beirut or Hamburg": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Novels set in Beirut or Hamburg\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "what are some novels about the Ming dynasty or Novels set in Hebei": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: what are some novels about the Ming dynasty or Novels set in Hebei\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "2017 novels from Australia or South Australia set novels": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 2017 novels from Australia or South Australia set novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "French novels about mystery or from 1909": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: French novels about mystery or from 1909\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "1534 books or 1553 books": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 1534 books or 1553 books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Books that are by Stephen Fry or about Adolf Hitler": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Books that are by Stephen Fry or about Adolf Hitler\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "1555 or 1558 books": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 1555 or 1558 books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Novels set in the 1650s, also the 1710s.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Novels set in the 1650s, also the 1710s.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "1947 French novels also novels by Jean-Paul Sartre.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 1947 French novels also novels by Jean-Paul Sartre.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "books about the Bermuda Triangle or by James Randi": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: books about the Bermuda Triangle or by James Randi\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Fantasy novels from 1909 or gothic novels published in France": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Fantasy novels from 1909 or gothic novels published in France\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Books about Franklin D. Roosevelt or Dwight D. Eisenhower.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Books about Franklin D. Roosevelt or Dwight D. Eisenhower.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "1946 fantasy novels or that are set in Northamptonshire": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1946 fantasy novels or that are set in Northamptonshire\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Charlotte Lennox novels or books from 1752": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Charlotte Lennox novels or books from 1752\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "1782 or 1770 books": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 1782 or 1770 books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "poetry books from 1939 or 1947": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: poetry books from 1939 or 1947\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Novels about Alien abductions or 1910 French novels": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Novels about Alien abductions or 1910 French novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "what are 1897 French novels or by Pierre Loti": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: what are 1897 French novels or by Pierre Loti\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Novels that are by Henry Handel Richardson or that are 1930's Australian novels": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Novels that are by Henry Handel Richardson or that are 1930's Australian novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Don Quixote or Beowulf books": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Don Quixote or Beowulf books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Books about whaling or 1984 novels from Australia": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Books about whaling or 1984 novels from Australia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Chinese historical novels from 2005": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Chinese historical novels from 2005\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "what are some Novels about freedom of speech or Novels by George Orwell": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: what are some Novels about freedom of speech or Novels by George Orwell\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Novels about spirit possession or Chinese alternate history": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Novels about spirit possession or Chinese alternate history\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "1742 or French satirical novels": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 1742 or French satirical novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "1925 French novels or Novels about French prostitution": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1925 French novels or Novels about French prostitution\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Novels that are set in both the Zhou dynasty and in Henan": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Novels that are set in both the Zhou dynasty and in Henan\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Chinese novels adapted into plays or Yu Hua novels": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Chinese novels adapted into plays or Yu Hua novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "1840s debut novels or 1846 novels from Russia": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 1840s debut novels or 1846 novels from Russia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Chinese novels from 2009 or 2008": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Chinese novels from 2009 or 2008\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Novels about British prostitution or from 1722": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Novels about British prostitution or from 1722\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Novels that are 1928 debut novels or by Leslie Charteris": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Novels that are 1928 debut novels or by Leslie Charteris\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "what are some  1877 British novels or Novels by R. D. Blackmore": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: what are some  1877 British novels or Novels by R. D. Blackmore\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "non-fiction books from 1798 or 1879": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: non-fiction books from 1798 or 1879\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "what are some Novels by Andrew Greig or Scottish crime novels": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: what are some Novels by Andrew Greig or Scottish crime novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Books about heroin, also novels about homelessness.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Books about heroin, also novels about homelessness.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "2009 Indian, or by Chetan Bhagat, novels": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 2009 Indian, or by Chetan Bhagat, novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Novels set in the Yuan dynasty or Mongolia": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Novels set in the Yuan dynasty or Mongolia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "what are some Novels by William Harrison Ainsworth or some that are set in the 1730s": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: what are some Novels by William Harrison Ainsworth or some that are set in the 1730s\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Books about Friedrich Nietzsche, or SUNY Press books": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Books about Friedrich Nietzsche, or SUNY Press books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Novels by Jerome K. Jerome or books from J.W. Arrowsmith": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Novels by Jerome K. Jerome or books from J.W. Arrowsmith\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "History books about either the French colonial empire or North Korea": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: History books about either the French colonial empire or North Korea\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Books about South Korea or Ethiopia": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Books about South Korea or Ethiopia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "2008 German novels or German autobiographical novels": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 2008 German novels or German autobiographical novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Non-fiction books that are about the Colombian drug cartels or illegal drug trade": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Non-fiction books that are about the Colombian drug cartels or illegal drug trade\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "1914 French novels or 1914 science fiction novels": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 1914 French novels or 1914 science fiction novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "1937 fantasy novels, also 1937 science fiction novels.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 1937 fantasy novels, also 1937 science fiction novels.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Fantasy novels in Welsh or Susan Cooper novels": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Fantasy novels in Welsh or Susan Cooper novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Novels by Mike Tucker or Novels about Jack the Ripper": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Novels by Mike Tucker or Novels about Jack the Ripper\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Iranian novels or books by Sadegh Hedayat": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Iranian novels or books by Sadegh Hedayat\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Books from Estonia or 1622": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Books from Estonia or 1622\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Australian novels from 1994 or 2040s set novels": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Australian novels from 1994 or 2040s set novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "what are some 1924 childrens books or fantasy novels?": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: what are some 1924 childrens books or fantasy novels?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Books published in 1599 or satirical novels in Spanish": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Books published in 1599 or satirical novels in Spanish\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Novels from 1849 or George Sand novels": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Novels from 1849 or George Sand novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "2009 Japanese novels or ones by Kenzabur\u014d \u014ce": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 2009 Japanese novels or ones by Kenzabur\u014d \u014ce\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "1969 fantasy novels or Novels by Kingsley Amis": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 1969 fantasy novels or Novels by Kingsley Amis\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Novels that are set in Belgian Congo or in the Democratic Republic of Congo": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Novels that are set in Belgian Congo or in the Democratic Republic of Congo\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "William Morris novels or 1894 fantasy novels": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: William Morris novels or 1894 fantasy novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "French detective or mystery novels": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: French detective or mystery novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "1906 fantasy novels or ones by Selma Lagerl\u00f6f": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 1906 fantasy novels or ones by Selma Lagerl\u00f6f\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Sahara or 1817 non-fictional books": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Sahara or 1817 non-fictional books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "Malay-language novels or Novels by Han Suyin": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Malay-language novels or Novels by Han Suyin\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "books"
    },
    "1998 children's books that aren't 1998 fiction books.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 1998 children's books that aren't 1998 fiction books.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Herbert Jenkins books are not comedy books": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Herbert Jenkins books are not comedy books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Non-Canadian books that are about Quebec.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Non-Canadian books that are about Quebec.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "books by Edgar rice burrows that arent fantasy": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: books by Edgar rice burrows that arent fantasy\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Children's, but not illustrated, books adapted into films": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Children's, but not illustrated, books adapted into films\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Novels about nobility not based on actual events": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Novels about nobility not based on actual events\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Books about the British Empire, excluding the information about British India.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Books about the British Empire, excluding the information about British India.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Demon novels that are not fantasy series": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Demon novels that are not fantasy series\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Georges Simenon novels that are not detective novels.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Georges Simenon novels that are not detective novels.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Non-fiction books about genocide, excluding history.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Non-fiction books about genocide, excluding history.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Non social psychology Books about apartheid": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Non social psychology Books about apartheid\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Communism books that are not about Asia": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Communism books that are not about Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "novles by Robert B parker that arent set in boston": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: novles by Robert B parker that arent set in boston\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Non-fiction books about genocide excluding Political books": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Non-fiction books about genocide excluding Political books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Islam and society books that don't include Islamic fundamentalism.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Islam and society books that don't include Islamic fundamentalism.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Non-American sci-fi novels by David Weber": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Non-American sci-fi novels by David Weber\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Novels about intersex not by Marion Zimmer Bradley": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Novels about intersex not by Marion Zimmer Bradley\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "what are some Books about cultural geography that are not about the arts": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: what are some Books about cultural geography that are not about the arts\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Georges Simenon novels not set in Paris": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Georges Simenon novels not set in Paris\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Books about cultural geography but not about cities": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Books about cultural geography but not about cities\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Non-fiction and non-psychological books about genocide": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Non-fiction and non-psychological books about genocide\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Novels by Agatha Christie that were not first published in serial form": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Novels by Agatha Christie that were not first published in serial form\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "David Weber novels that are not American speculative fiction": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: David Weber novels that are not American speculative fiction\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Books about Islam and society but not Political": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Books about Islam and society but not Political\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Non-sociology books about apartheid": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Non-sociology books about apartheid\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Non war and conflict 1770 novels": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Non war and conflict 1770 novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Novels set in the 1810s not about disasters": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Novels set in the 1810s not about disasters\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Non-death novels about psychopathy.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Non-death novels about psychopathy.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "what are some American magic realism novels that aren't Novels set in the United States": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: what are some American magic realism novels that aren't Novels set in the United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Children's books from 1999 that are not fiction books.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Children's books from 1999 that are not fiction books.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Non military novels set in the 1770's": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Non military novels set in the 1770's\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "apartheid books that aren't about the military": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: apartheid books that aren't about the military\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Georges Simenon novels that are not about crime": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Georges Simenon novels that are not about crime\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Non-fiction election books not about the politics of the United States": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Non-fiction election books not about the politics of the United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Vietnam set novels that are not about war and conflict": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Vietnam set novels that are not about war and conflict\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "what are some 1934 British novels that are not Novels set in England": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: what are some 1934 British novels that are not Novels set in England\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "1934 British novels not set in the United Kingdom": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 1934 British novels not set in the United Kingdom\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "1998 non-fiction children's books": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 1998 non-fiction children's books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Non History Books about communism": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Non History Books about communism\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Novels from the 1810's that are not set in the Napoleonic Wars.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Novels from the 1810's that are not set in the Napoleonic Wars.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Novels set in the 1810s excluding Novels about war and conflict": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Novels set in the 1810s excluding Novels about war and conflict\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Non Jews and Judaism Books by Isaac Asimov": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Non Jews and Judaism Books by Isaac Asimov\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Novels about fairies and sprites excluding American speculative fiction novels": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Novels about fairies and sprites excluding American speculative fiction novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "2001 children's, but not fiction, books": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 2001 children's, but not fiction, books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Non-Japanese books that are about Tokyo.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Non-Japanese books that are about Tokyo.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Non-fiction books about elections but not the United States": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Non-fiction books about elections but not the United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "1991 speculative, but not 1990s sci-fi, novels": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 1991 speculative, but not 1990s sci-fi, novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "British Empire, but not Pakistan, history books": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: British Empire, but not Pakistan, history books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Books about military personnel that exclude the Holocaust.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Books about military personnel that exclude the Holocaust.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Books about monarchs that don't include Napoleon.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Books about monarchs that don't include Napoleon.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Nazism novels that exclude novels set in Europe.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Nazism novels that exclude novels set in Europe.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Books that are only about pop music": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Books that are only about pop music\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "2012 science fiction novels that are not american novels.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 2012 science fiction novels that are not american novels.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Non-political history books about France": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Non-political history books about France\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Non-English books by Barrie & Jenkins.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Non-English books by Barrie & Jenkins.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Non-fantasy Lin Carter novels": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Non-fantasy Lin Carter novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "1934 British novels not set in Europe": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 1934 British novels not set in Europe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "non historical novels set in the Soviet Union": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: non historical novels set in the Soviet Union\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "nonfiction genocide books that don't involve the military": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: nonfiction genocide books that don't involve the military\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Books about cultural geography but not about creativity": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Books about cultural geography but not about creativity\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Demon, but no Campus, novels": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Demon, but no Campus, novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Novels set in the Mediterranean Sea but not Italy": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Novels set in the Mediterranean Sea but not Italy\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "Hispanic and Latino American novels set anywhere besides North America": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Hispanic and Latino American novels set anywhere besides North America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "books"
    },
    "1922 military novels and books": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 1922 military novels and books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1990s British novels that were adapted into plays": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 1990s British novels that were adapted into plays\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "Crime novels set in Japan": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Crime novels set in Japan\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "Postmodern books and novels set in Asia": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Postmodern books and novels set in Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "novels about music and mental health": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: novels about music and mental health\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "Business books about actors": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Business books about actors\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "American post-apocalyptic medical novels": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: American post-apocalyptic medical novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1971 Faber and Faber books": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 1971 Faber and Faber books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "Horror books that are set during WWII": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Horror books that are set during WWII\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "2018 american LGBT fiction novels": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 2018 american LGBT fiction novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "Viking Press medical books": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Viking Press medical books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "Novels adapted into radio programs that are set during WWI": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Novels adapted into radio programs that are set during WWI\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1947 Fiction novels that are set in Los Angeles": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 1947 Fiction novels that are set in Los Angeles\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1982 American LGBT related novels": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1982 American LGBT related novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "2009 books that are set in Paris": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 2009 books that are set in Paris\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1996 American children's books": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 1996 American children's books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1960 Catholic fiction books": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 1960 Catholic fiction books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "English books published by Farrar Straus and Giroux": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: English books published by Farrar Straus and Giroux\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "2006 HarperCollins books are children's books": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 2006 HarperCollins books are children's books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "Transhumanist Canadian speculative fiction books": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Transhumanist Canadian speculative fiction books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "Science fiction novels that are also Dutch-language books": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Science fiction novels that are also Dutch-language books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "Religious novels that are nominated for Hugo award for best novel winning works.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Religious novels that are nominated for Hugo award for best novel winning works.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "Illustrated Contemporary fantasy novels": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Illustrated Contemporary fantasy novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "books about socialism and the french revolution": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: books about socialism and the french revolution\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1971 British thriller novels": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 1971 British thriller novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "New Zealand novels that are award-winners": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: New Zealand novels that are award-winners\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "childrens fantasy novels about geology": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: childrens fantasy novels about geology\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "Novels that are satirical books adapted into operas": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Novels that are satirical books adapted into operas\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "Novels about artists set in Italy": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Novels about artists set in Italy\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1997 American books and novels published by Del Rey": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 1997 American books and novels published by Del Rey\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1996 science fiction novels that are published by Hachette": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 1996 science fiction novels that are published by Hachette\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "what are some books about new york city and the holocaust.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: what are some books about new york city and the holocaust.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1994 Novels set in Boston": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 1994 Novels set in Boston\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "Australian natural history books": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Australian natural history books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1956 debut novels": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 1956 debut novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "LGBT novels about Ohio": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: LGBT novels about Ohio\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1968 art novels": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 1968 art novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1988 fiction environmental books": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 1988 fiction environmental books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "2013 novels about multiple time paths": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 2013 novels about multiple time paths\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "Horror novels about military personnel": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Horror novels about military personnel\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "South African novels set in the Middle East": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: South African novels set in the Middle East\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1935 Satirical novels": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1935 Satirical novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1850s social psychology books": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 1850s social psychology books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1992 fiction books about the Holocaust.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1992 fiction books about the Holocaust.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "2002 Paleontology books": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 2002 Paleontology books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "2004 fiction autobiographical novels": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 2004 fiction autobiographical novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "Prequel novels that are HarperCollins books": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Prequel novels that are HarperCollins books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1985 debut American science-fiction novels.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 1985 debut American science-fiction novels.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1940's books about Argentina": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 1940's books about Argentina\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1942 British fiction novels adapted into plays": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 1942 British fiction novels adapted into plays\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1960 fiction books based on Psychology.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 1960 fiction books based on Psychology.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1939 American military novels": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1939 American military novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1935 Chinese novels.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 1935 Chinese novels.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "Award-winning novel from 1993": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Award-winning novel from 1993\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "2006 American environmental fiction books": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 2006 American environmental fiction books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "2018 Books about the far right": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 2018 Books about the far right\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "Medical novels set in Georgia": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Medical novels set in Georgia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "Books about education that are African novels": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Books about education that are African novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1990's novels about Quebec": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 1990's novels about Quebec\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "Chinese debut novels": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Chinese debut novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "Herbert Jenkins books set in North America": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Herbert Jenkins books set in North America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "Fantasy books that are Novels set in Sussex": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Fantasy books that are Novels set in Sussex\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "american LGBT magic realism novels": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: american LGBT magic realism novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "2011 speculative fiction novels set in california": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 2011 speculative fiction novels set in california\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "LGBT non-fiction novels": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: LGBT non-fiction novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "Novels published by Hutchinson about film director and producers": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Novels published by Hutchinson about film director and producers\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1930s children's books by Dr. Seuss": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 1930s children's books by Dr. Seuss\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "1997 American Collaborative books": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 1997 American Collaborative books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "books"
    },
    "list some Books by Margit Sandemo": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: list some Books by Margit Sandemo\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "novels written by by Louise Welsh": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: novels written by by Louise Welsh\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Anne Fine novels": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Anne Fine novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Novels from Bulgaria": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Novels from Bulgaria\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Gene DeWeese novels": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Gene DeWeese novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Jos\u00e9 Mar\u00eda Arguedas novels.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Jos\u00e9 Mar\u00eda Arguedas novels.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Books about Ukraine's history": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Books about Ukraine's history\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Debut novels released in 1953.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Debut novels released in 1953.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "French novels made in 1905.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: French novels made in 1905.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Robert Nozick books.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Robert Nozick books.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Books written by David Suzuki": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Books written by David Suzuki\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "history books for the Kamakura-Period": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: history books for the Kamakura-Period\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "historical novels that are japanese": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: historical novels that are japanese\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "List of 1973 Swedish novels?": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: List of 1973 Swedish novels?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Jean-Fran\u00e7ois Lyotard books": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Jean-Fran\u00e7ois Lyotard books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Books from Tammi": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Books from Tammi\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Josephus books": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Josephus books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Company books by Doubleday and McClure.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Company books by Doubleday and McClure.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Joseph Campbell books": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Joseph Campbell books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "name some 2002 Irish novels": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: name some 2002 Irish novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Telekinesis novels": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Telekinesis novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Dan Simmons novels": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Dan Simmons novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Books written by Irving Wallace": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Books written by Irving Wallace\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Novels by Alex Rider.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Novels by Alex Rider.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Novels written by A,J. Cronin.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Novels written by A,J. Cronin.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "British novels from 1877": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: British novels from 1877\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Satirical novels in Spanish": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Satirical novels in Spanish\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "American novels made in 1892.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: American novels made in 1892.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Charles Bukowski books.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Charles Bukowski books.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Books written by Karl Popper": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Books written by Karl Popper\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Martin Cruz Smith novels.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Martin Cruz Smith novels.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Books about underwater diving": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Books about underwater diving\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "what are some history books about quebec": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: what are some history books about quebec\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Books published in 1493": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Books published in 1493\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "British novels from 1800": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: British novels from 1800\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "German novels from 1965": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: German novels from 1965\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Books by Jon Elster": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Books by Jon Elster\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Will Self novels": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Will Self novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Robert Conroy novels": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Robert Conroy novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Books by beatrix Potter that are picture books": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Books by beatrix Potter that are picture books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Jules Barbey d'Aurevilly novels": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Jules Barbey d'Aurevilly novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Novels that are set in Northern Ontario.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Novels that are set in Northern Ontario.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Critical Jehovah's Witness books.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Critical Jehovah's Witness books.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Debut novels in 1902.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Debut novels in 1902.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Novels written by Ren\u00e9 Barjavel": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Novels written by Ren\u00e9 Barjavel\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Swedish novels from 2004": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Swedish novels from 2004\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Ray Bradbury novels": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Ray Bradbury novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Manuel Mujica L\u00e1inez novels": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Manuel Mujica L\u00e1inez novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Plays based on Swedish novels": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Plays based on Swedish novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "what are some Novels by Julia Golding": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: what are some Novels by Julia Golding\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "New Zealand books about politics.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: New Zealand books about politics.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Joan Didion novels": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Joan Didion novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Non-fiction books from 1910": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Non-fiction books from 1910\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "what are Novels by E. E. Smith": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: what are Novels by E. E. Smith\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Mao Zedong books": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Mao Zedong books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "what are some 1940 fantasy novels": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: what are some 1940 fantasy novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Don Winslow novels": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Don Winslow novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "what are some Novels by Gaston Leroux": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: what are some Novels by Gaston Leroux\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "what are some Books by Galileo Galilei": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: what are some Books by Galileo Galilei\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Australian novels from 1991": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Australian novels from 1991\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "What are some novels set in Gloucestershire?": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: What are some novels set in Gloucestershire?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "poetry books from 1929": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: poetry books from 1929\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Debut novels from 1976": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Debut novels from 1976\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Books from 1680": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Books from 1680\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Bengali written Indian historical novels": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Bengali written Indian historical novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Non-fiction books from 1844": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Non-fiction books from 1844\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "books"
    },
    "Novels about families set in Boston and New England.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Novels about families set in Boston and New England.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1959 debut Novels about disasters": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 1959 debut Novels about disasters\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1985 speculative fiction novels that are DAW books books": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 1985 speculative fiction novels that are DAW books books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1993 fiction and non-fiction Scottish book": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 1993 fiction and non-fiction Scottish book\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "2010 Social science books and Dystopian novels.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 2010 Social science books and Dystopian novels.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1982 British novels about Africa": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1982 British novels about Africa\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "Books about totalitarianism are about the arts and creativity": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Books about totalitarianism are about the arts and creativity\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "Crime detective novels set during World War II": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Crime detective novels set during World War II\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "Dystopian Nonlinear narrative novels about science": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Dystopian Nonlinear narrative novels about science\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "Crime novels that are both American crime novels and 1932 novels": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Crime novels that are both American crime novels and 1932 novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "what are some debut 2010's travel books?": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: what are some debut 2010's travel books?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1963 science books set in Pennsylvania.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 1963 science books set in Pennsylvania.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "2008 British young adult Science books": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 2008 British young adult Science books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "American young adult Novels set on Mars.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: American young adult Novels set on Mars.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "Russian books from 1952 based on actual events": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Russian books from 1952 based on actual events\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "2001 sociology books about sexuality": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 2001 sociology books about sexuality\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1963 sci fi novels about north america": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 1963 sci fi novels about north america\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "2nd-millennium books published by Donald M. Grant about werewolves": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 2nd-millennium books published by Donald M. Grant about werewolves\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "Autobiographical psychological books": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Autobiographical psychological books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "Books about social psychology set in the Middle Ages that are Hachette Book Group books": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Books about social psychology set in the Middle Ages that are Hachette Book Group books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "2000's science fiction novels about race and ethnicity and the United States": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 2000's science fiction novels about race and ethnicity and the United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "2014 non-fiction Harvard University Press science books": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 2014 non-fiction Harvard University Press science books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1981 British science fiction books and novels": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 1981 British science fiction books and novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "Scholastic Corporation books that are also Children's books and novels set on islands": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Scholastic Corporation books that are also Children's books and novels set on islands\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "Novels set in Russia and the Arctic about war and conflict": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Novels set in Russia and the Arctic about war and conflict\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1984 Science fiction Space opera novel series": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1984 Science fiction Space opera novel series\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "2001 American fiction books about Florida": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 2001 American fiction books about Florida\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1984 Fantasy novels about the United Kingdom": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 1984 Fantasy novels about the United Kingdom\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "Postmodern novels set in Japan": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Postmodern novels set in Japan\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "Metafictional English language novels that are also 1953 fiction books.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Metafictional English language novels that are also 1953 fiction books.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "2007 American sci-fi Novels set in fictional locations": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 2007 American sci-fi Novels set in fictional locations\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "Autobiographical novels based on actual events in New York (state)": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Autobiographical novels based on actual events in New York (state)\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "Political and Sociology books about the United Kingdom": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Political and Sociology books about the United Kingdom\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "Portuguese-language Books about Europe set in the Middle Ages": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Portuguese-language Books about Europe set in the Middle Ages\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1990s Satirical and Parody speculative fiction novels": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 1990s Satirical and Parody speculative fiction novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "2010s speculative fiction novels about Washington (state) and the United States.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 2010s speculative fiction novels about Washington (state) and the United States.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "American LGBT novels set in New England and that are also Speculative fiction novels": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: American LGBT novels set in New England and that are also Speculative fiction novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "2019 books that are both about social history and countries.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 2019 books that are both about social history and countries.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "2nd-millennium Sociology British Gothic novels": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 2nd-millennium Sociology British Gothic novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "2010 novels and book about computing": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 2010 novels and book about computing\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1959 Grosset & Dunlap american childrens novels": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1959 Grosset & Dunlap american childrens novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1980 books that are non fiction and, about British thriller.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 1980 books that are non fiction and, about British thriller.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1963 Historical fiction books about the military.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 1963 Historical fiction books about the military.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "English-language biographical novels about diseases and disorders": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: English-language biographical novels about diseases and disorders\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "War novels about the philippines during the interwar period.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: War novels about the philippines during the interwar period.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1898 English-language books that are also about adventure": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 1898 English-language books that are also about adventure\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1980s books that are Jewish novels and based on the Bible": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 1980s books that are Jewish novels and based on the Bible\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1890s historical books and novels published by Harper & Brothers": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1890s historical books and novels published by Harper & Brothers\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "History/Adventure books about France from 1933": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: History/Adventure books about France from 1933\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "english language fantasy novels based on comics": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: english language fantasy novels based on comics\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1998 novels about Australian crime": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 1998 novels about Australian crime\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1880's novels that are set in Paris and New York City": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 1880's novels that are set in Paris and New York City\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1920s political books about Asia": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 1920s political books about Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "fictional WWII novels about antisemitisim.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: fictional WWII novels about antisemitisim.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1985 American English-language novels that are also Jewish American novels": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 1985 American English-language novels that are also Jewish American novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "American medical novels set in the 1940's": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: American medical novels set in the 1940's\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "2003 Non-fiction books and novels set in New York City.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 2003 Non-fiction books and novels set in New York City.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1936 Alternate history novels and books based in Asia": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 1936 Alternate history novels and books based in Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "Novels set in Washington D.C that are books about England and Asia.'": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Novels set in Washington D.C that are books about England and Asia.'\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1990s and 1997 non-fiction French books": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 1990s and 1997 non-fiction French books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "1960s Irish novels about writers": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 1960s Irish novels about writers\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "books"
    },
    "2000s History books about politics, excluding authoritarianism.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 2000s History books about politics, excluding authoritarianism.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Dystopian Children's science fiction novels that are not set in the future": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Dystopian Children's science fiction novels that are not set in the future\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Crime books about the arts, but not popular culture books": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Crime books about the arts, but not popular culture books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Non- Erotic French novels about sexuality.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Non- Erotic French novels about sexuality.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "2010's nonfiction books about war that arent about WWII": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 2010's nonfiction books about war that arent about WWII\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "American books that are also about crowd psychology, but not Books about North America.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: American books that are also about crowd psychology, but not Books about North America.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "2000s books that are also Books about social history excluding Books about totalitarianism": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 2000s books that are also Books about social history excluding Books about totalitarianism\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Books based on actual events that are also Books about Donald Trump excluding 2010s books": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Books based on actual events that are also Books about Donald Trump excluding 2010s books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "1980s Collaborative books excluding non-fiction": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1980s Collaborative books excluding non-fiction\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Books about intelligence agencies and also social sciences but not the Military": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Books about intelligence agencies and also social sciences but not the Military\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Debut novels that are non-biographical but are about writers": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Debut novels that are non-biographical but are about writers\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Non-British novels in 1934 set in Europe.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Non-British novels in 1934 set in Europe.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "2010's non fiction social psychology books, that aren't about politics": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 2010's non fiction social psychology books, that aren't about politics\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "1990's totalitarianism books, that aren't about Nazism": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 1990's totalitarianism books, that aren't about Nazism\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Non-American Children's fiction medical books": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Non-American Children's fiction medical books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Libertarian and Science books but not about capitalism": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Libertarian and Science books but not about capitalism\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "1960s books about the media but not about creativity": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 1960s books about the media but not about creativity\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Contemporary fantasy romance novels, that aren't Urban fantasy": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Contemporary fantasy romance novels, that aren't Urban fantasy\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "2012 English books that are not about Europe.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 2012 English books that are not about Europe.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "2000s space opera science fiction novels that are not set in fictional locations": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 2000s space opera science fiction novels that are not set in fictional locations\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "American novels for young adults set in school but not high school or secondary school": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: American novels for young adults set in school but not high school or secondary school\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "animal, but not children's, books about the UK": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: animal, but not children's, books about the UK\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Paranormal novels from the 1990's that aren't about extraterrestrial life": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Paranormal novels from the 1990's that aren't about extraterrestrial life\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "2010s Novellas but not American ones": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 2010s Novellas but not American ones\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Science book about cultural geography but is not about Architecture.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Science book about cultural geography but is not about Architecture.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Children's, but not Young adult, Novels about diseases and disorders": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Children's, but not Young adult, Novels about diseases and disorders\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "2019 books that are nonfiction and about countries but not political books.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 2019 books that are nonfiction and about countries but not political books.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "British science fiction novels set on fictional planets excluding novels based on Doctor Who.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: British science fiction novels set on fictional planets excluding novels based on Doctor Who.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Comedy books that are also Parody books excluding Discworld books": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Comedy books that are also Parody books excluding Discworld books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "1960s African novels but not set in Africa": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 1960s African novels but not set in Africa\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "2000s books that are also Books about social history excluding Books about ideologies": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 2000s books that are also Books about social history excluding Books about ideologies\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "American non-fiction non-political book about the United States military": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: American non-fiction non-political book about the United States military\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "English-language novels that are 1985 speculative fiction but not American 1985 novels": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: English-language novels that are 1985 speculative fiction but not American 1985 novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Non-fiction Islamic fundamentalism books that are not about crime": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Non-fiction Islamic fundamentalism books that are not about crime\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Political novels set in Russia but are not Science Fiction": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Political novels set in Russia but are not Science Fiction\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "1990's books that are about totalitarianism but not about Nazi Germany": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1990's books that are about totalitarianism but not about Nazi Germany\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Historical high fantasy novels, that aren't Apocalyptic": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Historical high fantasy novels, that aren't Apocalyptic\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Popular culture and company books that exclude computers.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Popular culture and company books that exclude computers.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Christianity, but not cultural history, books": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Christianity, but not cultural history, books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "one shot, british sci fi books set on fictional planets": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: one shot, british sci fi books set on fictional planets\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Non-fantasy parody comedy books.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Non-fantasy parody comedy books.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "British science fiction novels set on fictional planets but does not discuss any transport": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: British science fiction novels set on fictional planets but does not discuss any transport\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Books about creativity and computers but not about games": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Books about creativity and computers but not about games\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Contemporary fantasy novels set in the United States that are not about legendary creatures": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Contemporary fantasy novels set in the United States that are not about legendary creatures\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Non-detective Belgian novels by Georges Simenon": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Non-detective Belgian novels by Georges Simenon\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "2006 English  fiction books not about the United Kingdom": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 2006 English  fiction books not about the United Kingdom\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "2018 non-fiction books about countries that are but not about North America": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 2018 non-fiction books about countries that are but not about North America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Popular culture company books but not about Technology": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Popular culture company books but not about Technology\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "2000s history books about politics, excluding ideologies": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 2000s history books about politics, excluding ideologies\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Middle age crime novels but not set in Rome": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Middle age crime novels but not set in Rome\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "1960s science fiction novels set in outer space that aren't american": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 1960s science fiction novels set in outer space that aren't american\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "1960's British crime novels, that aren't set in the UK": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 1960's British crime novels, that aren't set in the UK\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "libertarian social science books not about capitalism": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: libertarian social science books not about capitalism\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Young adult novels set in Oceania that are not Australian or for children": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Young adult novels set in Oceania that are not Australian or for children\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "books"
    },
    "Novels by Mary Shelley, 1819 novels, or 1823 novels.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Novels by Mary Shelley, 1819 novels, or 1823 novels.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "1968 or 1973 Swedish novels, or Novels by Sj\u00f6wall and Wahl\u00f6\u00f6": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 1968 or 1973 Swedish novels, or Novels by Sj\u00f6wall and Wahl\u00f6\u00f6\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "list some Books about violence, Books about sacrifice, or Books about the Oedipus complex?": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: list some Books about violence, Books about sacrifice, or Books about the Oedipus complex?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Isekai novels and light novels or 1955 fantasy novels or Novels based on anime.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Isekai novels and light novels or 1955 fantasy novels or Novels based on anime.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "2011 or 2013 Irish novels, or Skulduggery Pleasant books": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 2011 or 2013 Irish novels, or Skulduggery Pleasant books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Books that are by Hachette Books Group, about near-death experiences, or that are set in heaven.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Books that are by Hachette Books Group, about near-death experiences, or that are set in heaven.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Japanese fantasy novels, 1984 Japanese novels, or Animated films based on novels": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Japanese fantasy novels, 1984 Japanese novels, or Animated films based on novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "History books about Malaysia or the Qing dynasty or about South Korea": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: History books about Malaysia or the Qing dynasty or about South Korea\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Novels by Hideyuki Kikuchi or Miyuki Miyabe, or novels made into animated films.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Novels by Hideyuki Kikuchi or Miyuki Miyabe, or novels made into animated films.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Novels by Wu Jianren that are set in Yunnan or Jiangsu": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Novels by Wu Jianren that are set in Yunnan or Jiangsu\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Austrian historical novels, Novels by Hermann Hesse, or 1932 German-language novels.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Austrian historical novels, Novels by Hermann Hesse, or 1932 German-language novels.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Novels by Alan Duff, 1990 debut novels, or books based on Twin Peaks.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Novels by Alan Duff, 1990 debut novels, or books based on Twin Peaks.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Novels set in Hubei, Jiangxi, or Henan": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Novels set in Hubei, Jiangxi, or Henan\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "French novels from 1952 or 1963, or that are by Alain Robbe-Grillet": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: French novels from 1952 or 1963, or that are by Alain Robbe-Grillet\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "what are Books by Malachi Martin, set in Vatican City, or set during the Israeli\u2013Palestinian conflict?": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: what are Books by Malachi Martin, set in Vatican City, or set during the Israeli\u2013Palestinian conflict?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Novels about Jack the Ripper, 1868 French novels, or French detective novels.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Novels about Jack the Ripper, 1868 French novels, or French detective novels.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "1914 speculative fiction novels, 1914 fantasy novels, or 1914 French novels.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: 1914 speculative fiction novels, 1914 fantasy novels, or 1914 French novels.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Novels set in The Zhou Dynasty, Northern Song, or Henan": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Novels set in The Zhou Dynasty, Northern Song, or Henan\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Novels that are set in Jiangxi, the Ming dynasty, or Zhejiang": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Novels that are set in Jiangxi, the Ming dynasty, or Zhejiang\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "2004 Italian novels or about secret societies or books by Umberto Eco": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 2004 Italian novels or about secret societies or books by Umberto Eco\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Novels from 1797, 1910 French novels, or French Gothic novels": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Novels from 1797, 1910 French novels, or French Gothic novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "1891 debut novels, Indian novels adapted into plays, or that are set in V\u00e4rmland": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: 1891 debut novels, Indian novels adapted into plays, or that are set in V\u00e4rmland\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "2006 or 2007 Chinese novels or by Mo Yan": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 2006 or 2007 Chinese novels or by Mo Yan\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "books from 1569 or 1559, or 1789 non-fiction books": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: books from 1569 or 1559, or 1789 non-fiction books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "German novels that are political or about alternate history or from 1974": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: German novels that are political or about alternate history or from 1974\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "1728 or 1720 books or by Isaac Newton": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 1728 or 1720 books or by Isaac Newton\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Novels that are by Stefan Zweig or Joseph Roth, or that are Australian novels that have been adapted into a play": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Novels that are by Stefan Zweig or Joseph Roth, or that are Australian novels that have been adapted into a play\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Nigerian novels from 2011 or 2022, or by Nnedi Okorafor": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Nigerian novels from 2011 or 2022, or by Nnedi Okorafor\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "2003 German novels or 2004 German novels or Novels by Walter Moers": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 2003 German novels or 2004 German novels or Novels by Walter Moers\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Novels about gangs, history books about punishment or non-fiction books about gangs": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Novels about gangs, history books about punishment or non-fiction books about gangs\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Novels that are 1980's Indian books, children's books, or that are by Bibhutibhushan Bandyopadhyay": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Novels that are 1980's Indian books, children's books, or that are by Bibhutibhushan Bandyopadhyay\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "names ome 2009 Chinese novels, 2006 Chinese novels, or Novels set in the Ming dynasty": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: names ome 2009 Chinese novels, 2006 Chinese novels, or Novels set in the Ming dynasty\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Horror or 2018 novels from Canada, or Patrick deWitt novels": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Horror or 2018 novels from Canada, or Patrick deWitt novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Books by George G Harrap and Co, that are 1929 Australian novels, or Australian sports novels": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Books by George G Harrap and Co, that are 1929 Australian novels, or Australian sports novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "1966 Australian novels, novels by Christina Stead, or 1973 Australian novels.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 1966 Australian novels, novels by Christina Stead, or 1973 Australian novels.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Novels set in the Yuan dynasty or Books by Feng Menglong Novels set in Hubei": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Novels set in the Yuan dynasty or Books by Feng Menglong Novels set in Hubei\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Novels by Tobias Smollett or books from the 1750s": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Novels by Tobias Smollett or books from the 1750s\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Novels that are set in Yunnan or Henan, or that are 1991 Chinese novels.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Novels that are set in Yunnan or Henan, or that are 1991 Chinese novels.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "what are some Novels set in Jiangsu, 1750s, or Novels by Charlotte Lennox?": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: what are some Novels set in Jiangsu, 1750s, or Novels by Charlotte Lennox?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "1800s children's books or illustrated by Arthur Rackham or by John Tenniel": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 1800s children's books or illustrated by Arthur Rackham or by John Tenniel\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "French novels from 1913 or 1922, or that are mysteries": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: French novels from 1913 or 1922, or that are mysteries\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "1860 novels or 1860 American novels or Ivan Turgenev novellas": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: 1860 novels or 1860 American novels or Ivan Turgenev novellas\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Novels set in the Reformation or by Marquis de Sade or 1790s fantasy": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Novels set in the Reformation or by Marquis de Sade or 1790s fantasy\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Heroin addiction novels or Hubert Selby Jr. novels or Mozambique set novels": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Heroin addiction novels or Hubert Selby Jr. novels or Mozambique set novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "what are some Novels set in Shandong, Chinese political novels, or Books by Feng Menglong?": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: what are some Novels set in Shandong, Chinese political novels, or Books by Feng Menglong?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "2011 graphic novels, or Graphic novels by Sarnath Banerjee, or Pantheon Books comics titles": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: 2011 graphic novels, or Graphic novels by Sarnath Banerjee, or Pantheon Books comics titles\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "1819 or 1821 books or 1810s fantasy novels": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: 1819 or 1821 books or 1810s fantasy novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Novels published in the 1750s or set in Paraguay": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Novels published in the 1750s or set in Paraguay\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Novels set in Kaifeng, Sichuan, or Hubei": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Novels set in Kaifeng, Sichuan, or Hubei\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Picture books from Japan or the bombings of Hiroshima and Nagasaki novels or books": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Picture books from Japan or the bombings of Hiroshima and Nagasaki novels or books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Novels by Mildred D. Taylor or about Cleveland or Children's novellas": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Novels by Mildred D. Taylor or about Cleveland or Children's novellas\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "what are some 2006 Japanese novels, Japanese fantasy novels, or Novels by Nahoko Uehashi?": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: what are some 2006 Japanese novels, Japanese fantasy novels, or Novels by Nahoko Uehashi?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Books from 1821 or 1815, or fantasy novels from the 1810s": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Books from 1821 or 1815, or fantasy novels from the 1810s\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Novels set in Henan, Hubei, or books by Feng Menglong": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Novels set in Henan, Hubei, or books by Feng Menglong\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Novels from 1819 or Mary Shelley novels or Leicestershire set novels": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Novels from 1819 or Mary Shelley novels or Leicestershire set novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Non-fiction books about submarine warfare or the US navy, or series of history books about Worl War II": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Non-fiction books about submarine warfare or the US navy, or series of history books about Worl War II\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Australian novels made into tv shows, or 1911 debut novels, or novels by Joan Lindsay.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Australian novels made into tv shows, or 1911 debut novels, or novels by Joan Lindsay.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "children's books set in subterranea(such as the Chronicles of Narnia) or Isekai novels and light novels": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: children's books set in subterranea(such as the Chronicles of Narnia) or Isekai novels and light novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "what are some Novels by Tong Hua (writer), Chinese alternate history, or Interracial romance novels?": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: what are some Novels by Tong Hua (writer), Chinese alternate history, or Interracial romance novels?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Novels by Karl Ove Knausg\u00e5rd, Gyldendal Norsk Forlag books, or History books about Norway": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Novels by Karl Ove Knausg\u00e5rd, Gyldendal Norsk Forlag books, or History books about Norway\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "what are some Novels set in the Zhou dynasty, Shenmo novels, or Novels set in the Northern Song": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: what are some Novels set in the Zhou dynasty, Shenmo novels, or Novels set in the Northern Song\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "1910 French novels, French Gothic novels, or Novels by Gaston Leroux.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 1910 French novels, French Gothic novels, or Novels by Gaston Leroux.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Books about the Haitian Revolution or 1826 novels or books": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Books about the Haitian Revolution or 1826 novels or books\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Novels from Marathi, about misogyny, or that are Swedish mystery novels": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Novels from Marathi, about misogyny, or that are Swedish mystery novels\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Books from 1798 that are non-fiction, 1740, or are demography": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Books from 1798 that are non-fiction, 1740, or are demography\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "books"
    },
    "Zacatecas' trees or Flora of Aguascalientes": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Zacatecas' trees or Flora of Aguascalientes\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Trees of Tabasco or Sinaloa": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Trees of Tabasco or Sinaloa\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Monotypic Zingiberales genera or Endemic flora of Myanmar": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Monotypic Zingiberales genera or Endemic flora of Myanmar\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Crops originating from Chile or Uruguay": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Crops originating from Chile or Uruguay\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "what are some plants in Hinduism or Plant common names?": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: what are some plants in Hinduism or Plant common names?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Plants from Mississippi or Horsetails.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Plants from Mississippi or Horsetails.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Argentina crops or New Zealand crops": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Argentina crops or New Zealand crops\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Flora of the Gambia or Trees of the Democratic Republic of the Congo": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Flora of the Gambia or Trees of the Democratic Republic of the Congo\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Orchids of Honduras or Costa Rica": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Orchids of Honduras or Costa Rica\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "what are some Flora of Henan or Orchids of Guizhou": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: what are some Flora of Henan or Orchids of Guizhou\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Plants from the Pitcairn Islands or the Society Islands": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Plants from the Pitcairn Islands or the Society Islands\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Bryophyta of Australia or Bryophyta of New Zealand": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Bryophyta of Australia or Bryophyta of New Zealand\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Liliales or Corsiaceae": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Liliales or Corsiaceae\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Trees that are from Tabasco or Martinique": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Trees that are from Tabasco or Martinique\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "what are some Flora of the State of Mexico or Trees of the State of Mexico?": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: what are some Flora of the State of Mexico or Trees of the State of Mexico?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Trees of Guanajuato or San Luis Potos\u00ed": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Trees of Guanajuato or San Luis Potos\u00ed\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "French Guiana Palms or Barbados Flora": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: French Guiana Palms or Barbados Flora\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Trees of Quintana Roo or Dominica": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Trees of Quintana Roo or Dominica\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Plants from Sakhalin or Svalbard": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Plants from Sakhalin or Svalbard\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Common names for plants or religious plants.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Common names for plants or religious plants.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Potatoe plants or Stoloniferous plants": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Potatoe plants or Stoloniferous plants\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Asparagales families": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Asparagales families\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Plants from Northern Mariana Islands or Guam": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Plants from Northern Mariana Islands or Guam\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Flora of Morelos or Zacatecas Trees": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Flora of Morelos or Zacatecas Trees\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Plants from Dominica or the Netherlands Antilles": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Plants from Dominica or the Netherlands Antilles\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Trees that are from the Bahamas or the Cayman Islands": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Trees that are from the Bahamas or the Cayman Islands\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Plants of Western Sahara or Trees of the Arabian Peninsula": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Plants of Western Sahara or Trees of the Arabian Peninsula\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Trees found in Manitoba or Alberta": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Trees found in Manitoba or Alberta\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Orchids that exist in French Guiana or Argentina": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Orchids that exist in French Guiana or Argentina\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "What are Trees of Dominica or Campeche": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: What are Trees of Dominica or Campeche\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Trees of Turkey or Azerbaijan": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Trees of Turkey or Azerbaijan\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Trees in Malaysia, Southeast Asia": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Trees in Malaysia, Southeast Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "what are Flora of Martinique or Trees of Campeche": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: what are Flora of Martinique or Trees of Campeche\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Flora of Saint Vincent and the Grenadines or Cayman Island Trees": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Flora of Saint Vincent and the Grenadines or Cayman Island Trees\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Trees of South Korea and Endemic flora of Korea": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Trees of South Korea and Endemic flora of Korea\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "The State of Mexico Trees and Flora of Morelos": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: The State of Mexico Trees and Flora of Morelos\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Trees that are from Morocco or Algeria": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Trees that are from Morocco or Algeria\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "what are some, Edible palms or Palms of French Guiana": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: what are some, Edible palms or Palms of French Guiana\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Orchids of France or Lebanon": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Orchids of France or Lebanon\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Paleocene or Late Cretaceous plants": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Paleocene or Late Cretaceous plants\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Crops originating from Uruguay or Chile": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Crops originating from Uruguay or Chile\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Plant species of Morelos or trees of Tabasco": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Plant species of Morelos or trees of Tabasco\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Plants from the Late Devonian period or Horsetails": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Plants from the Late Devonian period or Horsetails\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Plants in Hinduism or plants that come for India.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Plants in Hinduism or plants that come for India.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "what are some Monotypic Liliales genera or Corsiaceae": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: what are some Monotypic Liliales genera or Corsiaceae\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Flora of the Marquesas Islands or Flora of the Pitcairn Islands": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Flora of the Marquesas Islands or Flora of the Pitcairn Islands\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "what are plants of Dominica or of Saint Vincent and the Grenadines": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: what are plants of Dominica or of Saint Vincent and the Grenadines\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Flora of the Cayman Islands": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Flora of the Cayman Islands\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "list trees from jamaica or tabasco": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: list trees from jamaica or tabasco\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Trees that exist in Southeast Asia or Bangladesh": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Trees that exist in Southeast Asia or Bangladesh\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Plants from the Mississippian period or the Late Cretaceous period": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Plants from the Mississippian period or the Late Cretaceous period\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Plants from Grenada or Saint Vincent and the Grenadines": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Plants from Grenada or Saint Vincent and the Grenadines\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "trees from Malaysia or south east asia": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: trees from Malaysia or south east asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "what are some orchids of sichuan or some plats of north korea": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: what are some orchids of sichuan or some plats of north korea\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Flora of Saint Kitts, Nevis and Martinique": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Flora of Saint Kitts, Nevis and Martinique\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Trees from Michoac\u00e1n or the State of Mexico": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Trees from Michoac\u00e1n or the State of Mexico\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Trees of Quintana Roo or Guadeloupe": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Trees of Quintana Roo or Guadeloupe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Plants from Gough Island or the Prince Edwards Islands": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Plants from Gough Island or the Prince Edwards Islands\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "French Guiana palms or Windward Islands trees": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: French Guiana palms or Windward Islands trees\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Trees from Windward Islands or plants from the Cayman Islands": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Trees from Windward Islands or plants from the Cayman Islands\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "what are Crops originating from Colombia or Chile": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: what are Crops originating from Colombia or Chile\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Moss or Monotypic plant orders": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Moss or Monotypic plant orders\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Orchids of Reunion or Mauritius": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Orchids of Reunion or Mauritius\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Plants from Mississippi or from the Late Cretaceous period": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Plants from Mississippi or from the Late Cretaceous period\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "plants"
    },
    "Flora of Georgia (country) that are not in Western Asia": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Flora of Georgia (country) that are not in Western Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Trees of Eastern Canada excluding Flora of the North-Central United States": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Trees of Eastern Canada excluding Flora of the North-Central United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Plants that exist in Switzerland, but not in Southwestern Europe": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Plants that exist in Switzerland, but not in Southwestern Europe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Trees of New Guinea excluding Trees of Malesia": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Trees of New Guinea excluding Trees of Malesia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Trees of Western Canada, but not Flora of the Western United States": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Trees of Western Canada, but not Flora of the Western United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Trees of New Guinea not found in Southeast Asia": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Trees of New Guinea not found in Southeast Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Flora of Albania are not Flora of Greece": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Flora of Albania are not Flora of Greece\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Orchids of Myanmar but not India": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Orchids of Myanmar but not India\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Flora of the Central African Republic that is not in Nigeria": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Flora of the Central African Republic that is not in Nigeria\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Plants found in Alberta but not found in Northwestern United States": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Plants found in Alberta but not found in Northwestern United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Endemic flora of Peninsular Malaysia, excluding trees of Malesia": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Endemic flora of Peninsular Malaysia, excluding trees of Malesia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Plants found in Liberia but not found in Cameroon": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Plants found in Liberia but not found in Cameroon\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Endemic flora of Peninsular Malaysia, excluding trees": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Endemic flora of Peninsular Malaysia, excluding trees\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Trees of Eastern Canada that are not in the Southern United States": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Trees of Eastern Canada that are not in the Southern United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Plants that are native to Romania, but not Eastern Europe": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Plants that are native to Romania, but not Eastern Europe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "what are some Pandanus that are not Paleotropical flora?": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: what are some Pandanus that are not Paleotropical flora?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Orchids of Myanmar that arent palearctic": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Orchids of Myanmar that arent palearctic\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Plants found in the Bahamas but not the Southeastern United States": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Plants found in the Bahamas but not the Southeastern United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Trees found in the Northwestern US, but not the Southwestern US": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Trees found in the Northwestern US, but not the Southwestern US\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Orchids of Myanmar but not Thailand": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Orchids of Myanmar but not Thailand\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Trees in the North-Central Unites States, but not in the Southeastern United States.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Trees in the North-Central Unites States, but not in the Southeastern United States.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Flora of Sinaloa not found in Sonora": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Flora of Sinaloa not found in Sonora\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Plant life found in Finland, but not Russia": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Plant life found in Finland, but not Russia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Orchids of Myanmar excluding Flora of Thailand": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Orchids of Myanmar excluding Flora of Thailand\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Trees found in the Great Lakes region of North America that are not found in Southeastern United States": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Trees found in the Great Lakes region of North America that are not found in Southeastern United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Ferns of California not florae": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Ferns of California not florae\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Flora of Austria but not of Italy": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Flora of Austria but not of Italy\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Flora of Sierra Leone but not of Ivory Coast": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Flora of Sierra Leone but not of Ivory Coast\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Flora of Suriname not Brazil": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Flora of Suriname not Brazil\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Orchids of Peru that are not in Ecuador": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Orchids of Peru that are not in Ecuador\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "South-central Pacific Flora excluding French Polynesia.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: South-central Pacific Flora excluding French Polynesia.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Trees of the Great Lakes region (North America) that are not in Canada": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Trees of the Great Lakes region (North America) that are not in Canada\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "plants"
    },
    "Plants from Hispaniola and Guyana": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Plants from Hispaniola and Guyana\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Palearctic plants that are from Costa Rica": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Palearctic plants that are from Costa Rica\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "what are some  Flora of New Zealand that are also Trees of Australia": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: what are some  Flora of New Zealand that are also Trees of Australia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "what are some Epiphytic orchids of the Southeastern United States.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: what are some Epiphytic orchids of the Southeastern United States.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Flora of the Chihuahuan Desert that are also in Baja California Sur": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Flora of the Chihuahuan Desert that are also in Baja California Sur\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Flora grasses that are both from California and, South American regions.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Flora grasses that are both from California and, South American regions.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Carnivorous plants of the Nearctic realm": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Carnivorous plants of the Nearctic realm\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Historically recognized domesticated plants.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Historically recognized domesticated plants.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Carnivorous plants of North America that are also in the Great Lakes region": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Carnivorous plants of North America that are also in the Great Lakes region\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Flora found in Turkey and Ethiopia": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Flora found in Turkey and Ethiopia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "California desert region flora also of South America": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: California desert region flora also of South America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Orchids found in Oceania": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Orchids found in Oceania\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Flora of Venezuela that are Gentianales genera": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Flora of Venezuela that are Gentianales genera\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Orchids and plants from Belize and Honduras": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Orchids and plants from Belize and Honduras\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Afrotropical realm flora that are Fern florae": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Afrotropical realm flora that are Fern florae\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Flora of Bolivia that is also in the Leeward Islands": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Flora of Bolivia that is also in the Leeward Islands\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Plant species that exist in Veracruz and Eastern Canada": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Plant species that exist in Veracruz and Eastern Canada\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "halophytes of Korea": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: halophytes of Korea\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "plants that are from Australia and Mozambique": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: plants that are from Australia and Mozambique\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Ferns of America that are Flora of the United Kingdom.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Ferns of America that are Flora of the United Kingdom.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Plants native to both Jamaica and Paraguay": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Plants native to both Jamaica and Paraguay\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Domesticated plants of Malesia": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Domesticated plants of Malesia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Medical plants of Africa that can also be Flora of Ghana.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Medical plants of Africa that can also be Flora of Ghana.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Trees of North-Central and Northwestern United States": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Trees of North-Central and Northwestern United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Australasian Trees found in North America": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Australasian Trees found in North America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Plants from Texas and Panama": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Plants from Texas and Panama\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Plant species that are from Oaxaca and the South-Central United States": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Plant species that are from Oaxaca and the South-Central United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Monotypic angiosperm genera found in Jalisco.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Monotypic angiosperm genera found in Jalisco.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Flora of the North-Central United States that are Flora of the Klamath Mountains": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Flora of the North-Central United States that are Flora of the Klamath Mountains\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Ornamental trees from Coahuila": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Ornamental trees from Coahuila\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Proteaceae plants from the Oceanian realm": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Proteaceae plants from the Oceanian realm\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Poisonous trees of the United States": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Poisonous trees of the United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Asterid genera that is used in Native American medicine.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Asterid genera that is used in Native American medicine.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "flora of norfolk island and indonesia": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: flora of norfolk island and indonesia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Rubiaceae trees of western South America": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Rubiaceae trees of western South America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "what are Trees of Australia that are also Malvales genera": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: what are Trees of Australia that are also Malvales genera\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Western Indian Ocean plants and Trees in the Caribbean.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Western Indian Ocean plants and Trees in the Caribbean.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Orchids of Belize that are also in Western South America": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Orchids of Belize that are also in Western South America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Orchids of both North America and Cuba": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Orchids of both North America and Cuba\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Bunchgrasses of southwestern Europe": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Bunchgrasses of southwestern Europe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Trees of Western South American are also known as Flora of Oaxaca": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Trees of Western South American are also known as Flora of Oaxaca\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Drought-tolerant Flora of the Pacific": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Drought-tolerant Flora of the Pacific\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Monotypic Poaceae plants of Indomalesia": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Monotypic Poaceae plants of Indomalesia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Carnivorous plants of Western canada": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Carnivorous plants of Western canada\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Asterid genera of Socotra": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Asterid genera of Socotra\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Plant species found in China and Romania": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Plant species found in China and Romania\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Trees found in both Texas and Canada": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Trees found in both Texas and Canada\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Freshwater plants": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Freshwater plants\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Orchids of North America that are Flora of the Arctic": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Orchids of North America that are Flora of the Arctic\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Flora of Ecuador that is also in Jamaica": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Flora of Ecuador that is also in Jamaica\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Edible Trees of Mexico": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Edible Trees of Mexico\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Flora of Yemen and egypt": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Flora of Yemen and egypt\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Flora of Macaronesia that are also found in Madagascar": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Flora of Macaronesia that are also found in Madagascar\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Trees that are found in South America and South-Central US": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Trees that are found in South America and South-Central US\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Tree North-Central United States and Mexico have in common": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Tree North-Central United States and Mexico have in common\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Tropical flora Caryophyllaceae genera": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Tropical flora Caryophyllaceae genera\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Flora of Sierra Leone": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Flora of Sierra Leone\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Brackish water plants that are from British Columbia": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Brackish water plants that are from British Columbia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "what are Monotypic rosid genera that are also Flora of Madagascar": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: what are Monotypic rosid genera that are also Flora of Madagascar\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Medicinal plants from South America used in traditional African medicine": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Medicinal plants from South America used in traditional African medicine\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Flora from both British Columbia and Nuevo Leon.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Flora from both British Columbia and Nuevo Leon.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Ornamental trees found in the Russian Far East.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Ornamental trees found in the Russian Far East.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Orchids of Cambodia that are also in Australia": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Orchids of Cambodia that are also in Australia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Flora of South America and the Central African Republic": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Flora of South America and the Central African Republic\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Papausia flora that is also Endemic flora of Indonesia": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Papausia flora that is also Endemic flora of Indonesia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Flora of Polynesia that are also Tropical fruit": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Flora of Polynesia that are also Tropical fruit\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Ericales plants of the Great Lakes region": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Ericales plants of the Great Lakes region\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Medicinal plants of Asia that are also found in the Russian Far East": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Medicinal plants of Asia that are also found in the Russian Far East\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "plants"
    },
    "Bermuda Flora": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Bermuda Flora\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "list of Orchids from Suriname": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: list of Orchids from Suriname\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Cucurbits that contain only one species": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Cucurbits that contain only one species\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Orchids from Mauritius.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Orchids from Mauritius.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Monospecific screw-pine genera": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Monospecific screw-pine genera\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "what are Flora of Tlaxcala": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: what are Flora of Tlaxcala\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Nigeria's orchids": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Nigeria's orchids\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Plants that are only found in Samoa": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Plants that are only found in Samoa\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Ethiopia's trees": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Ethiopia's trees\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "what are some Crops originating from Pre-Columbian North America": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: what are some Crops originating from Pre-Columbian North America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "plant fossils": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: plant fossils\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Campeche trees": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Campeche trees\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "genus of plants belonging to the family Cyclanthaceae": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: genus of plants belonging to the family Cyclanthaceae\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "South Sandwich Islands plant species.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: South Sandwich Islands plant species.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "plants from Hinduism": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: plants from Hinduism\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Plants that are Middle Devonian": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Plants that are Middle Devonian\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "species of plant in the family Chloranthaceae": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: species of plant in the family Chloranthaceae\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Guinea-Bissau Flora": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Guinea-Bissau Flora\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "orders of Red algae": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: orders of Red algae\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Endemic flora originated from Afghanistan": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Endemic flora originated from Afghanistan\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "what are Sacred trees in Hinduism": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: what are Sacred trees in Hinduism\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Flora only found in Bulgaria.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Flora only found in Bulgaria.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Flora that originates from the Maldives.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Flora that originates from the Maldives.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Plants that are Cormous": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Plants that are Cormous\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "monocotyledonous": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: monocotyledonous\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Endemic flora from Guyana.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Endemic flora from Guyana.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "plants that are low light": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: plants that are low light\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Sri Lanka trees": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Sri Lanka trees\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Monotypic Malvales genera": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Monotypic Malvales genera\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "what are the Monotypic plant orders": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: what are the Monotypic plant orders\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Michoac\u00e1n trees": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Michoac\u00e1n trees\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Amblystegiaceae species.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Amblystegiaceae species.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "all about Flowers": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: all about Flowers\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Plants from S\u00e3o Tom\u00e9 and Pr\u00edncipe": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Plants from S\u00e3o Tom\u00e9 and Pr\u00edncipe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "S\u00e3o Tom\u00e9 and Pr\u00edncipe endemic flora": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: S\u00e3o Tom\u00e9 and Pr\u00edncipe endemic flora\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Types of plums": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Types of plums\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Polytrichales": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Polytrichales\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "France's orchids": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: France's orchids\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Plants in the Brassicales family": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Plants in the Brassicales family\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "what is a Hybrid prunus?": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: what is a Hybrid prunus?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Plants that are Oligocene": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Plants that are Oligocene\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Plants from the Poales family": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Plants from the Poales family\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Plants native to Rodrigues": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Plants native to Rodrigues\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Pacific origin crops": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Pacific origin crops\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Crops originating in Pakistan": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Crops originating in Pakistan\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Korea's orchids": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Korea's orchids\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Tabasco Trees.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Tabasco Trees.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Plants that are only found in Lesotho.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Plants that are only found in Lesotho.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "small succulent plants": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: small succulent plants\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Families in Malvales": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Families in Malvales\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Endemic orchids in Costa Rica": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Endemic orchids in Costa Rica\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Guizhou orchids": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Guizhou orchids\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "angiosperms of the Cretaceous period": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: angiosperms of the Cretaceous period\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Guanajuato trees": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Guanajuato trees\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Plants only found in the Juan Fern\u00e1ndez Islands.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Plants only found in the Juan Fern\u00e1ndez Islands.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "State of Mexico plants": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: State of Mexico plants\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Endemic flora from Papua New Guinea.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Endemic flora from Papua New Guinea.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Endemic flora from England.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Endemic flora from England.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Flora found in South Sudan": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Flora found in South Sudan\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Endemic flora from the country Georgia": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Endemic flora from the country Georgia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Guam plant": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Guam plant\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Kermadec Islands Flora": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Kermadec Islands Flora\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Native plants of Bolivia": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Native plants of Bolivia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Orchids found in the Caribbean.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Orchids found in the Caribbean.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "plants"
    },
    "Flora of Greenland that is also in Europe and Korea": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Flora of Greenland that is also in Europe and Korea\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Arecaceae are monotypic and afrotropical plants.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Arecaceae are monotypic and afrotropical plants.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "what are some Angiosperms that are also Orchids of Thailand and Indonesia": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: what are some Angiosperms that are also Orchids of Thailand and Indonesia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Flora of Sudan and South America that is Holartic": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Flora of Sudan and South America that is Holartic\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "pantropical ethiopian edible plants": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: pantropical ethiopian edible plants\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Flora of the Cape Provinces that are in both Madagascar and KwaZulu-Natal": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Flora of the Cape Provinces that are in both Madagascar and KwaZulu-Natal\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Flora of the Windward Islands that is also both Neotropical realm flora and in western South America": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Flora of the Windward Islands that is also both Neotropical realm flora and in western South America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Monotypic rosid genera and Oceanian realm flora and of Melanesia": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Monotypic rosid genera and Oceanian realm flora and of Melanesia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Flora of the Caucasus, Southeastern Europe,and Eastern Asia": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Flora of the Caucasus, Southeastern Europe,and Eastern Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Pantropical Orchids both of Malaya and Western Australia": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Pantropical Orchids both of Malaya and Western Australia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Neotropical and Afrotropical realm flora of Guinea": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Neotropical and Afrotropical realm flora of Guinea\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Plants from Montana and trees from Western Canada and North America": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Plants from Montana and trees from Western Canada and North America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Malesia and Pantropical flora and also Lycopodiaceae": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Malesia and Pantropical flora and also Lycopodiaceae\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Flora of Alaska, New Mexico, and Northwestern United States": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Flora of Alaska, New Mexico, and Northwestern United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Garden plants of Northern Europe and Northeastern United States": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Garden plants of Northern Europe and Northeastern United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Flora from Southwestern United States that are both Cactaceae and Neotropical realm.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Flora from Southwestern United States that are both Cactaceae and Neotropical realm.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Flora of Japan that are Orchids of China and Flora of the Arctic.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Flora of Japan that are Orchids of China and Flora of the Arctic.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "trees from borneo and australia": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: trees from borneo and australia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Flora of Malaya that are both Monotypic plant genera and Monotypic asterid genera": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Flora of Malaya that are both Monotypic plant genera and Monotypic asterid genera\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Flora of Malesia are Orchids of New Guinea and of the Pacific": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Flora of Malesia are Orchids of New Guinea and of the Pacific\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Holarctic Flora of the United States and North-Central China": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Holarctic Flora of the United States and North-Central China\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Poisonous plants from the United States and South America.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Poisonous plants from the United States and South America.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Flora found in Wyoming, Colorado as well as the Great Lakes region (North America)": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Flora found in Wyoming, Colorado as well as the Great Lakes region (North America)\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Nearctic realm flora from Northern South America that are also found in Mexico": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Nearctic realm flora from Northern South America that are also found in Mexico\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Paleotropical flora of china and new caledonia": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Paleotropical flora of china and new caledonia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Annonaceae genera from Indo-China and Malesia": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Annonaceae genera from Indo-China and Malesia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Flora of Lebanon, North Africa and Caucasus": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Flora of Lebanon, North Africa and Caucasus\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "California Flora that's both of Northeast Asia and Alaska": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: California Flora that's both of Northeast Asia and Alaska\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Desert flora and of Baja California Sur and Trees of South America": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Desert flora and of Baja California Sur and Trees of South America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Trees that exist in Peru, North America, and Uruguay": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Trees that exist in Peru, North America, and Uruguay\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Monotypic Gentianales genera tropical trees of Peru": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Monotypic Gentianales genera tropical trees of Peru\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "drought tolerant aloe of socotra": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: drought tolerant aloe of socotra\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Medicinal plants that are both Garden plants of Europe and Tropical flora": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Medicinal plants that are both Garden plants of Europe and Tropical flora\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Australasian realm flora and of the Pacific also Gentianales genera": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Australasian realm flora and of the Pacific also Gentianales genera\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Western United States trees that are also flora of Arizona and Wyoming": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Western United States trees that are also flora of Arizona and Wyoming\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Flora of Java are Flora of Australia and of the Oceanian realm": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Flora of Java are Flora of Australia and of the Oceanian realm\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Solanaceae and Eudicot genera that are Paleotropical plants.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Solanaceae and Eudicot genera that are Paleotropical plants.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Ornamental trees found in Texas and the North-Central United States.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Ornamental trees found in Texas and the North-Central United States.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "what are some trees of south american and mexico that also grow in sri lanka": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: what are some trees of south american and mexico that also grow in sri lanka\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Medicinal plants of Africa also Asterales genera and Angiosperms": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Medicinal plants of Africa also Asterales genera and Angiosperms\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Tropical Rubiaceae plants of the Dominican Republic": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Tropical Rubiaceae plants of the Dominican Republic\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Trees and flora from Southern and Southwestern United States": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Trees and flora from Southern and Southwestern United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Drought-tolerant Palearctic plants of China": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Drought-tolerant Palearctic plants of China\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Carnivorous plants from Asia, Angola, and Ethiopia": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Carnivorous plants from Asia, Angola, and Ethiopia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Bolivian trees that are also flora of western south america and the andes": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Bolivian trees that are also flora of western south america and the andes\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Monotypic Fabales genera and Forages": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Monotypic Fabales genera and Forages\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Flora of Yugoslavia that are both Flora of Italy and Flora of Romania": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Flora of Yugoslavia that are both Flora of Italy and Flora of Romania\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Flora of Japan that are both Orchids of India and Orchids of Queensland": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Flora of Japan that are both Orchids of India and Orchids of Queensland\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "drought tolerant trees of the united sates and the Rio Grande valleys": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: drought tolerant trees of the united sates and the Rio Grande valleys\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Gymnosperm genera that are endemic flora of New Zealand": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Gymnosperm genera that are endemic flora of New Zealand\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "drought tolerant Flora of the Sierra Nevada and nuevo leon": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: drought tolerant Flora of the Sierra Nevada and nuevo leon\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Australasian realm Flora that are also Conifers of New Guinea": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Australasian realm Flora that are also Conifers of New Guinea\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Edible plants that are Flora of the Southwestern United States and Eudicot genera": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Edible plants that are Flora of the Southwestern United States and Eudicot genera\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Flora of western South America that are also Flora of the Leeward Islands and the Dominican Republic": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Flora of western South America that are also Flora of the Leeward Islands and the Dominican Republic\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Cactoideae genera plants from South America that are garden plates": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Cactoideae genera plants from South America that are garden plates\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Night blooming plants that are from the Caribbean and Neotropical realm flora": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Night blooming plants that are from the Caribbean and Neotropical realm flora\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Monocots that are in Australia, New Caledonia and Vietnam": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Monocots that are in Australia, New Caledonia and Vietnam\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Palearctic flora that are both Flora of Ukraine and Garden plants of Europe": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Palearctic flora that are both Flora of Ukraine and Garden plants of Europe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Garden plants that are found in Argentina and Central America": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Garden plants that are found in Argentina and Central America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Gabon Flora are Flora of Mexico and Cameroon": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Gabon Flora are Flora of Mexico and Cameroon\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Flora of southern South America that are both Flora of Australasia and Neotropical realm flora": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Flora of southern South America that are both Flora of Australasia and Neotropical realm flora\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "what are some Saxifragales genera that are also Garden plants of Asia and Ornamental plants": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: what are some Saxifragales genera that are also Garden plants of Asia and Ornamental plants\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Flora found in Belize, Peru and the South-Central United States": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Flora found in Belize, Peru and the South-Central United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Trees found in the United States": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Trees found in the United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Flora of Madagascar that are both Flora of Brazil and Flora of Guinea": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Flora of Madagascar that are both Flora of Brazil and Flora of Guinea\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "plants"
    },
    "Paleotropical flora and Malpighiales genera are not Monotypic rosid genera": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Paleotropical flora and Malpighiales genera are not Monotypic rosid genera\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "what are Monotypic angiosperm genera that are also Flora of Melanesia but not Monotypic eudicot genera": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: what are Monotypic angiosperm genera that are also Flora of Melanesia but not Monotypic eudicot genera\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Medicinal plants that are trees in South America but not in Western South America": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Medicinal plants that are trees in South America but not in Western South America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Flora of northern South America and also Paraguay but not central America": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Flora of northern South America and also Paraguay but not central America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Trees of China and Korea, but not Japan.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Trees of China and Korea, but not Japan.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Orchids of Indonesia that are also in Malaysia but not Thailand": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Orchids of Indonesia that are also in Malaysia but not Thailand\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Flora of Peninsular Malaysia that are also Endemic flora of Malaysia but not in Malaya": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Flora of Peninsular Malaysia that are also Endemic flora of Malaysia but not in Malaya\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "plant species from Ecuador that are also found in the Caribbean, but not Venezuela": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: plant species from Ecuador that are also found in the Caribbean, but not Venezuela\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Flora of Northern and Southeastern but not central Europe": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Flora of Northern and Southeastern but not central Europe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Orchids of Indonesia and Malaysia but not the Philippines": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Orchids of Indonesia and Malaysia but not the Philippines\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "what is flora of Arizona and the western United States, but not Flora of Oregon?": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: what is flora of Arizona and the western United States, but not Flora of Oregon?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Flora of Indo-China that are also Trees of Peninsular Malaysia excluding Flora of Borneo": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Flora of Indo-China that are also Trees of Peninsular Malaysia excluding Flora of Borneo\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Flora of Turkey but not Italy": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Flora of Turkey but not Italy\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Pantropical flora that are also Trees of New Guinea excluding Flora of Southeast Asia": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Pantropical flora that are also Trees of New Guinea excluding Flora of Southeast Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Flora of Japan that are also Flora of Northeast Asia excluding Flora of Korea": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Flora of Japan that are also Flora of Northeast Asia excluding Flora of Korea\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Garden plants that are also Flora of Italy excluding Garden plants of Europe": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Garden plants that are also Flora of Italy excluding Garden plants of Europe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Plants Myanmar and Bangladesh have in common but not from the Palearctic period": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Plants Myanmar and Bangladesh have in common but not from the Palearctic period\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Flora in India and Malesia, that exclude flora in Malaysia.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Flora in India and Malesia, that exclude flora in Malaysia.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Flora of Malaya also Endemic of Peninsular Malaysia but not Trees of Malesia": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Flora of Malaya also Endemic of Peninsular Malaysia but not Trees of Malesia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Orchids of Australia that are also in the Pacific, but not Polynesia": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Orchids of Australia that are also in the Pacific, but not Polynesia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Ornamental plants found in the Cascade Range, excluding the Klamath Mountains.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Ornamental plants found in the Cascade Range, excluding the Klamath Mountains.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Afrotropical realm flora that are carnivorous but not Lentibulariaceae": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Afrotropical realm flora that are carnivorous but not Lentibulariaceae\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Afrotropical realm flora are Carnivorous plants of Africa but are not Lentibulariaceae": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Afrotropical realm flora are Carnivorous plants of Africa but are not Lentibulariaceae\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Trees from both southeastern and north-central United states but not from Eastern Canada.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Trees from both southeastern and north-central United states but not from Eastern Canada.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Plants from Southeast Asia and Polynesia, but not Melanesia": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Plants from Southeast Asia and Polynesia, but not Melanesia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Flora of Venezuela that are also Trees of Peru excluding Trees of Bolivia": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Flora of Venezuela that are also Trees of Peru excluding Trees of Bolivia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Garden plants of the Northern and Eastern US, that aren't found in the Southeastern US": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Garden plants of the Northern and Eastern US, that aren't found in the Southeastern US\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Garden plants from North America and the Eastern US, but not from Canada": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Garden plants from North America and the Eastern US, but not from Canada\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Trees from colombia and Brazil but not found in ecuador": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Trees from colombia and Brazil but not found in ecuador\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Holarctic plants from Austria, but not Italy": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Holarctic plants from Austria, but not Italy\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Flora of Europe that are also Flora of the Southwestern United States excluding Flora of Canada": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Flora of Europe that are also Flora of the Southwestern United States excluding Flora of Canada\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Non Canada flora and Trees of the Northwestern United States": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Non Canada flora and Trees of the Northwestern United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Plants from the Southwestern and Southeastern US, but not South-Central US": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Plants from the Southwestern and Southeastern US, but not South-Central US\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Trees of Indomalesia and Papuasia, excluding New Guinea": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Trees of Indomalesia and Papuasia, excluding New Guinea\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Holarctic plants from the Cenozoic era but not the Paleogene period": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Holarctic plants from the Cenozoic era but not the Paleogene period\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Flora of Arizona, also of Oregon, but not of the Sierra Nevada (United States)": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Flora of Arizona, also of Oregon, but not of the Sierra Nevada (United States)\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Flowering plants from the Southwestern US, that aren't Asterales genera": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Flowering plants from the Southwestern US, that aren't Asterales genera\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Tropical flora Trees of New Guinea but not Southeast Asia": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Tropical flora Trees of New Guinea but not Southeast Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Flora of northern South America that is also in Nicaragua but not Peru": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Flora of northern South America that is also in Nicaragua but not Peru\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Plants and humans from North America that are not from the Native American cuisine.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Plants and humans from North America that are not from the Native American cuisine.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Flora of Peninsular Malaysia that are also Endemic flora of Malaysia excluding Trees of Peninsular Malaysia": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Flora of Peninsular Malaysia that are also Endemic flora of Malaysia excluding Trees of Peninsular Malaysia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Drought tolerant plants that are not Flora of Mexico are used in Native American cuisine": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Drought tolerant plants that are not Flora of Mexico are used in Native American cuisine\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Orchids of Myanmar but not China": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Orchids of Myanmar but not China\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Orchids of Indonesia and Malaysia, excluding the Philippines.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Orchids of Indonesia and Malaysia, excluding the Philippines.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Angiosperms of the Western United States but not Asterid genera": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Angiosperms of the Western United States but not Asterid genera\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Angiosperms that are in Eastern Europe but not in Russia": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Angiosperms that are in Eastern Europe but not in Russia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Plants that are native to the Democratic Republic of the Congo and Zambia, but not Angola": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Plants that are native to the Democratic Republic of the Congo and Zambia, but not Angola\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Trees of Colombia that are also in Brazil but not Ecuador": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Trees of Colombia that are also in Brazil but not Ecuador\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Epiphytes of Australia, excluding orchids": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Epiphytes of Australia, excluding orchids\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Garden plants that are also Flora of Polynesia excluding Garden plants of Oceania": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Garden plants that are also Flora of Polynesia excluding Garden plants of Oceania\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Trees of Peninsular Malaysia that are also in Indo-China but not in Borneo": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Trees of Peninsular Malaysia that are also in Indo-China but not in Borneo\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Orchids of Myanmar, excluding orchids of Thailand.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Orchids of Myanmar, excluding orchids of Thailand.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "flora of south east asia and polynesia, but not papuasia": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: flora of south east asia and polynesia, but not papuasia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "plants that exist in the Caribbean and Guyana, but not Suriname": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: plants that exist in the Caribbean and Guyana, but not Suriname\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Tropical flora and trees of New Guinea but not of Malesia": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Tropical flora and trees of New Guinea but not of Malesia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Trees from North-Central and Southern US, but not Canada": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Trees from North-Central and Southern US, but not Canada\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "what are some Flora of India that are also of the Australasian, but not orchids of Malaya?": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: what are some Flora of India that are also of the Australasian, but not orchids of Malaya?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Non-prehistoric Lycophytes": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Non-prehistoric Lycophytes\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Flora from both Zimbabwe and Malawi but not flora from Mozambique.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Flora from both Zimbabwe and Malawi but not flora from Mozambique.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Monotypic asterid genera that aren't Monotypic Asterales genera that are from the Southwestern US": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Monotypic asterid genera that aren't Monotypic Asterales genera that are from the Southwestern US\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Ornamental plants that are found in Caucasus, excluding the Transcaucasus.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Ornamental plants that are found in Caucasus, excluding the Transcaucasus.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "plants of idaho and montana but not found in california": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: plants of idaho and montana but not found in california\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "plants"
    },
    "Endemic flora of Morocco or Algeria, or Monotypic Amaryllidaceae genera": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Endemic flora of Morocco or Algeria, or Monotypic Amaryllidaceae genera\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Flora of Djibouti, Flora of the Line Islands, Flora of Niue": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Flora of Djibouti, Flora of the Line Islands, Flora of Niue\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Flora of Grenada or Saint Vincent and the Grenadines or trees of the Cayman Islands": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Flora of Grenada or Saint Vincent and the Grenadines or trees of the Cayman Islands\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Plum cultigens or Food plant cultivars, or corn": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Plum cultigens or Food plant cultivars, or corn\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Flora of the Kerguelen Islands or Crozet Islands or Prince Edward Islands": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Flora of the Kerguelen Islands or Crozet Islands or Prince Edward Islands\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Sacred trees in Hinduism or Plants in religion or common names": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Sacred trees in Hinduism or Plants in religion or common names\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Trees of Guanajuato, Sinaloa, and State of Mexico": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Trees of Guanajuato, Sinaloa, and State of Mexico\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Guizhou Orchids or Flora of North Korea and Heilongjiang": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Guizhou Orchids or Flora of North Korea and Heilongjiang\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "what are some Flora of Palau, Flora of the Pitcairn Islands, or Flora of Niue?": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: what are some Flora of Palau, Flora of the Pitcairn Islands, or Flora of Niue?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Maize varieties or Plum cultigens or cultivars that are food plants": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Maize varieties or Plum cultigens or cultivars that are food plants\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Crops that originated from Chile, New Zealand, or Uruguay": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Crops that originated from Chile, New Zealand, or Uruguay\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Trees of Quintana Roo or the Windward Islands or Flora of the Netherlands Antilles": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Trees of Quintana Roo or the Windward Islands or Flora of the Netherlands Antilles\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Plants from the Maldives or Coral Sea Islands Territory, or crops that originate from Pakistan": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Plants from the Maldives or Coral Sea Islands Territory, or crops that originate from Pakistan\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "what are Flora of Western Sahara, the Savage Islands, or Trees of the Arabian Peninsula?": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: what are Flora of Western Sahara, the Savage Islands, or Trees of the Arabian Peninsula?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Flora of Gough Island or Flora of the Prince Edward Islands or Flora of the Kerguelen Islands": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Flora of Gough Island or Flora of the Prince Edward Islands or Flora of the Kerguelen Islands\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "what are Endemic flora of the Cayman Islands, lora of the Cayman Islands, or Orchids of Jamaica?": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: what are Endemic flora of the Cayman Islands, lora of the Cayman Islands, or Orchids of Jamaica?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Cretaceous angiosperms or Late Cretaceous plants or Early Cretaceous plants": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Cretaceous angiosperms or Late Cretaceous plants or Early Cretaceous plants\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Flora of Barbados or Saint Vincent and the Grenadines or Trees of Dominica": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Flora of Barbados or Saint Vincent and the Grenadines or Trees of Dominica\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Varieties of corn or native Canadian crops or native United States crops": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Varieties of corn or native Canadian crops or native United States crops\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Trees of Zacatecas or Guanajuato or Flora of Aguascalientes": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Trees of Zacatecas or Guanajuato or Flora of Aguascalientes\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Trees of Manitoba or Alberta or Saskatchewan": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Trees of Manitoba or Alberta or Saskatchewan\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Flora of Martinique, Grenada, Barbados.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Flora of Martinique, Grenada, Barbados.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Trees of Guadeloupe, Trees of Quintana Roo, or Trees of Martinique.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Trees of Guadeloupe, Trees of Quintana Roo, or Trees of Martinique.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Flora of the Northern Mariana Islands or Guam or Carnivorous plants of the Pacific": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Flora of the Northern Mariana Islands or Guam or Carnivorous plants of the Pacific\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "what are some Trees of Guadeloupe, Trees of Tabasco, or Trees of \u00celes des Saintes": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: what are some Trees of Guadeloupe, Trees of Tabasco, or Trees of \u00celes des Saintes\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Plants only found in Samoa, found in Pitcairn Islands, or in Niue": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Plants only found in Samoa, found in Pitcairn Islands, or in Niue\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Crops originating from Pakistan or Flora of the Coral Sea Islands Territory or Flora of the Maldives": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Crops originating from Pakistan or Flora of the Coral Sea Islands Territory or Flora of the Maldives\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Orchids of Argentina or Orchids of Suriname or Orchids of French Guiana": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Orchids of Argentina or Orchids of Suriname or Orchids of French Guiana\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Flora of Western Sahara or the Savage Islands or trees of the Arabian Peninsula": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Flora of Western Sahara or the Savage Islands or trees of the Arabian Peninsula\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "what are some Plants in Hinduism, Thermogenic plan, or Plant common names?": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: what are some Plants in Hinduism, Thermogenic plan, or Plant common names?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Native crops of Bolivia or Uruguay or solanum tuberosum": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Native crops of Bolivia or Uruguay or solanum tuberosum\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Crops originating from Canada or Monotypic Cucurbitaceae or Monotypic Cucurbitales genera": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Crops originating from Canada or Monotypic Cucurbitaceae or Monotypic Cucurbitales genera\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Crops originating from Uruguay or Chile or New Zealand": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Crops originating from Uruguay or Chile or New Zealand\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Varieties of maize, food plant, or plum": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Varieties of maize, food plant, or plum\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Endemic flora of the Cayman Islands or Orchids of Jamaica or Flora of the Cayman Islands": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Endemic flora of the Cayman Islands or Orchids of Jamaica or Flora of the Cayman Islands\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "what are some Crops originating from New Zealand, Bolivia, or from Argentina": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: what are some Crops originating from New Zealand, Bolivia, or from Argentina\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Bryophyta of Australasia or Australia or New Zealand": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Bryophyta of Australasia or Australia or New Zealand\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Plants from the Line Islands, Kuwait, or Djibouti": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Plants from the Line Islands, Kuwait, or Djibouti\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Plants from Guam or the Northern Mariana Islands, or Carnivorous plants of the Pacific": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Plants from Guam or the Northern Mariana Islands, or Carnivorous plants of the Pacific\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Crops originating from Pakistan or India, or Grasses from Punjab": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Crops originating from Pakistan or India, or Grasses from Punjab\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Flora and trees of Guadeloupe, or Trees of lles des saintes.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Flora and trees of Guadeloupe, or Trees of lles des saintes.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Trees from Zacatecas or Guanajuato, or plants from Aguascalientes": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Trees from Zacatecas or Guanajuato, or plants from Aguascalientes\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "what are some Orchids of Honduras, French Guiana, of Suriname?": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: what are some Orchids of Honduras, French Guiana, of Suriname?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Crops originating from Bolivia, Uruguay or Argentina": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Crops originating from Bolivia, Uruguay or Argentina\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Plant families endemic to Australia or Boryaceae or Poales families": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Plant families endemic to Australia or Boryaceae or Poales families\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Plants in religion, common names for plants, or plants found in Hinduism": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Plants in religion, common names for plants, or plants found in Hinduism\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Flora and Endemic Flora of the Cayman Islands, or Flora of the Netherlands Antilles.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Flora and Endemic Flora of the Cayman Islands, or Flora of the Netherlands Antilles.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "what are some Crops originating from Chile, Argentina, or Paraguay?": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: what are some Crops originating from Chile, Argentina, or Paraguay?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Endemic flora of Korea or South Korea or Monotypic Oleaceae genera": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Endemic flora of Korea or South Korea or Monotypic Oleaceae genera\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Orchids of Guyana, or Orchids of French Guiana, or Orchids of Suriname": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Orchids of Guyana, or Orchids of French Guiana, or Orchids of Suriname\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Plants that are either Cucurbitales or Cucurbitaceae, or crops that originated from Canada": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Plants that are either Cucurbitales or Cucurbitaceae, or crops that originated from Canada\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Flora of the Savage Islands, Western Sahara, or Trees of the Arabian Peninsula": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Flora of the Savage Islands, Western Sahara, or Trees of the Arabian Peninsula\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Trees from Saskatchewan, Subarctic America, or Manitoba": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Trees from Saskatchewan, Subarctic America, or Manitoba\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Flora of Martinique, or trees of the Windward Islands or Dominica": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Flora of Martinique, or trees of the Windward Islands or Dominica\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Monotypic Cucurbitaceae genera or Monotypic Cucurbitales genera or Crops originating from Canada": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Monotypic Cucurbitaceae genera or Monotypic Cucurbitales genera or Crops originating from Canada\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Trees of Guanajuato or Zacatecas or Flora of Aguascalientes": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Trees of Guanajuato or Zacatecas or Flora of Aguascalientes\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Trees from Morocco or Algeria, or plants that are in the bible": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Trees from Morocco or Algeria, or plants that are in the bible\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Flora of Morelos, or Trees of Zacatecas or the State of Mexico": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Flora of Morelos, or Trees of Zacatecas or the State of Mexico\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Trees of Saskatchewan or Subarctic America": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Trees of Saskatchewan or Subarctic America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "plants"
    },
    "Cambrian or Silurian echinoderms": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Cambrian or Silurian echinoderms\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Silurian arthropods of Europe or devonian arthropods of North America": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Silurian arthropods of Europe or devonian arthropods of North America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Endemic birds of Annob\u00f3n or Terpsiphone": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Endemic birds of Annob\u00f3n or Terpsiphone\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Sulidae or Europe's Eocene birds": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Sulidae or Europe's Eocene birds\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Sulurian or Cambrian echinoderms": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Sulurian or Cambrian echinoderms\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Mammals from R\u00e9union or Comoros": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Mammals from R\u00e9union or Comoros\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Mammals of Saint Kitts and Nevis or Mammals of Grenada": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Mammals of Saint Kitts and Nevis or Mammals of Grenada\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Animals that are only found in Saudi Arabia or animals that can be found in the United Arab Emirates": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Animals that are only found in Saudi Arabia or animals that can be found in the United Arab Emirates\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Mammals from Barbados or Grenada": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Mammals from Barbados or Grenada\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Birds of Christmas Island or Fauna of the Cocos (Keeling) Islands": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Birds of Christmas Island or Fauna of the Cocos (Keeling) Islands\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Birds of Yap or Birds of the Federated States of Micronesia": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Birds of Yap or Birds of the Federated States of Micronesia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Extinct animals of Mauritius or Extinct birds of Indian Ocean islands": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Extinct animals of Mauritius or Extinct birds of Indian Ocean islands\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Quaternary birds of Australia or Dromornithidae": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Quaternary birds of Australia or Dromornithidae\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "birds of South America that are Ciconiiformes or Quaternary": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: birds of South America that are Ciconiiformes or Quaternary\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Echinoderms found in North America from the Paleozoic period or animals found in North America from the Pennsylvanian period": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Echinoderms found in North America from the Paleozoic period or animals found in North America from the Pennsylvanian period\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Extinct birds of Europe or Birds described in 1999": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Extinct birds of Europe or Birds described in 1999\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "what are Endemic birds of Tasmania or Dromaius": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: what are Endemic birds of Tasmania or Dromaius\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "The British Virgin Islands Fauna or Geotrygon": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: The British Virgin Islands Fauna or Geotrygon\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Ordovician animals of North America or Late Ordovician animals": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Ordovician animals of North America or Late Ordovician animals\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "North American arthropods from the Devonian period or the Silurian period": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: North American arthropods from the Devonian period or the Silurian period\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Birds discovered in 1994 or of the North Island": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Birds discovered in 1994 or of the North Island\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "what are some Eocene birds of North America or Cathartidae": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: what are some Eocene birds of North America or Cathartidae\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Mesozoic cephalopods of North America or Asia": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Mesozoic cephalopods of North America or Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Pleistocene crocodiles or Crocodilians of Asia": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Pleistocene crocodiles or Crocodilians of Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Native animals or birds of Guadeloupe": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Native animals or birds of Guadeloupe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Endemic birds of Argentina or described in 1979": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Endemic birds of Argentina or described in 1979\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Birds only from Cape Verde or animals that are only from Ant\u00e3o Cape Verde": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Birds only from Cape Verde or animals that are only from Ant\u00e3o Cape Verde\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "what are some Pinnipeds of Oceania or of Africa": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: what are some Pinnipeds of Oceania or of Africa\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Mammals of Dominica or Montserrat": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Mammals of Dominica or Montserrat\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Toads native to Africa and the southern Arabian Peninsula or native animals of Egypt": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Toads native to Africa and the southern Arabian Peninsula or native animals of Egypt\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "North American Eocene birds or Ciconiiformes": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: North American Eocene birds or Ciconiiformes\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Mammals found in New Caledonia or American Samoa": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Mammals found in New Caledonia or American Samoa\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Macaws or Birds of Martinique": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Macaws or Birds of Martinique\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "what are some Endemic birds of Tasmania or Birds described in 1954": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: what are some Endemic birds of Tasmania or Birds described in 1954\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Cave crustaceans of Virginia": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Cave crustaceans of Virginia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "what are some prehistoric arthropods of Asia or Carboniferous animals of Asia": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: what are some prehistoric arthropods of Asia or Carboniferous animals of Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Animals only found in Samoa or animals found in American Samoa": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Animals only found in Samoa or animals found in American Samoa\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Late Jurassic dinosaurs or Jurassic birds": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Late Jurassic dinosaurs or Jurassic birds\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Gaviiformes or Neogene birds of Europe": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Gaviiformes or Neogene birds of Europe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Birds discovered in 2006 or animals found in Camiguin": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Birds discovered in 2006 or animals found in Camiguin\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "what are some, Endemic fauna of England or Extinct beetles": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: what are some, Endemic fauna of England or Extinct beetles\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Fauna from either Cebu or Romblon.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Fauna from either Cebu or Romblon.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Birds that were discovered in 1957 or that are only found in Panama": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Birds that were discovered in 1957 or that are only found in Panama\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Birds of Grenada or Saint Lucia": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Birds of Grenada or Saint Lucia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Rodents of Pakistan or Rodents of Bangladesh": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Rodents of Pakistan or Rodents of Bangladesh\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Cuba's extinct animals or New World vultures": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Cuba's extinct animals or New World vultures\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Birds described in 1784 or Endemic birds of Tahiti": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Birds described in 1784 or Endemic birds of Tahiti\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Birds that are only found in the Democratic Republic of the Congo or that were discovered in 1949": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Birds that are only found in the Democratic Republic of the Congo or that were discovered in 1949\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Arthropods that are from prehistoric Asia or that are permian from North America": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Arthropods that are from prehistoric Asia or that are permian from North America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Birds from Sumba or that were discovered in 2002": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Birds from Sumba or that were discovered in 2002\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "invertebrates that are Ordovician or sponge families that are prehistoric": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: invertebrates that are Ordovician or sponge families that are prehistoric\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Animals native to Uzbekistan or Kazakhstan": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Animals native to Uzbekistan or Kazakhstan\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "what are  Fauna of Saudi Arabia or Endemic fauna from the United Arab Emirates": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: what are  Fauna of Saudi Arabia or Endemic fauna from the United Arab Emirates\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Freshwater snails of Africa or Invertebrates of Cameroon": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Freshwater snails of Africa or Invertebrates of Cameroon\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "what are some Fauna of Tajikistan or Fauna of Turkmenistan": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: what are some Fauna of Tajikistan or Fauna of Turkmenistan\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Animals of Australia from the Paleozoic period or animals of Asia from the Silurian period": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Animals of Australia from the Paleozoic period or animals of Asia from the Silurian period\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Extinct animals of Vietnam or Indonesia": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Extinct animals of Vietnam or Indonesia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Prehistoric animals of Antarctica": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Prehistoric animals of Antarctica\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Asian Carboniferous animals or Permian fish": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Asian Carboniferous animals or Permian fish\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "what are some, Casuariiformes or Eocene birds of South America": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: what are some, Casuariiformes or Eocene birds of South America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Permian fish or carboniferous animals of Asia": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Permian fish or carboniferous animals of Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Birds described in 1982 or Somalia's Endemic birds": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Birds described in 1982 or Somalia's Endemic birds\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Quaternary animals or Paleogene amphibians of Europe": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Quaternary animals or Paleogene amphibians of Europe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _",
        "domain": "animals"
    },
    "Non Miocene prehistoric marine mammals": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Non Miocene prehistoric marine mammals\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Freshwater fish of Malaysia excluding Fish of Thailand": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Freshwater fish of Malaysia excluding Fish of Thailand\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Amphibians native to Nicaragua, but not Panama": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Amphibians native to Nicaragua, but not Panama\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Birds native to the Sierra Madre Oriental, but not the Trans-Mexican Volcanic Belt": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Birds native to the Sierra Madre Oriental, but not the Trans-Mexican Volcanic Belt\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Pliocene animals of South America excluding Mammals of South America": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Pliocene animals of South America excluding Mammals of South America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Cenozoic birds of South America excluding Neogene animals of South America": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Cenozoic birds of South America excluding Neogene animals of South America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Early Triassic reptiles of South America, not from the late Triassic": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Early Triassic reptiles of South America, not from the late Triassic\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Birds of the Falkland Islands, not found in Chile": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Birds of the Falkland Islands, not found in Chile\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Reptiles from Taiwan that aren't found in Northeast Asia": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Reptiles from Taiwan that aren't found in Northeast Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Reptiles of Haiti but not Fauna of the Greater Antilles": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Reptiles of Haiti but not Fauna of the Greater Antilles\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Mammals of Cambodia not found in Malaysia": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Mammals of Cambodia not found in Malaysia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Animals only found in Yemen, but not in the Indian Ocean.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Animals only found in Yemen, but not in the Indian Ocean.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Reptiles of Nepal excluding Palearctic fauna": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Reptiles of Nepal excluding Palearctic fauna\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Prehistoric marine mammals excluding Neogene": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Prehistoric marine mammals excluding Neogene\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "what are some Amphibians of Nicaragua that are not Fauna of Panama": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: what are some Amphibians of Nicaragua that are not Fauna of Panama\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Marine fauna that are not fish from the Gulf of California.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Marine fauna that are not fish from the Gulf of California.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Arctic land animals excluding Mammals of North America": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Arctic land animals excluding Mammals of North America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Mammals of Sri Lanka excluding Mammals of India": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Mammals of Sri Lanka excluding Mammals of India\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Birds of the Sierra Madre Oriental that are not in the United States": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Birds of the Sierra Madre Oriental that are not in the United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Animals from Bhutan that are not found in Northeast Asia": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Animals from Bhutan that are not found in Northeast Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Reptiles found in Panama, but are not found in Colombia": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Reptiles found in Panama, but are not found in Colombia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Fauna of South India that are not Asian prehistoric reptiles": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Fauna of South India that are not Asian prehistoric reptiles\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Prehistoric birds of Europe but not Cenozoic": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Prehistoric birds of Europe but not Cenozoic\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Birds of the Trans-Mexican Volcanic Belt but not of the Sierra Madre del Sur": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Birds of the Trans-Mexican Volcanic Belt but not of the Sierra Madre del Sur\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Non-freshwater crustaceans of Africa": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Non-freshwater crustaceans of Africa\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Fish found in Central Asia, but not in Western Asia.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Fish found in Central Asia, but not in Western Asia.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Insects of the Dominican Republic excluding Fauna of the Greater Antilles": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Insects of the Dominican Republic excluding Fauna of the Greater Antilles\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Pliocene animals of South America that aren't prehistoric": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Pliocene animals of South America that aren't prehistoric\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Endemic fauna of Yemen that isnt from Sub-Saharan Africa": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Endemic fauna of Yemen that isnt from Sub-Saharan Africa\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Endemic fauna of Yemen are not fauna of East Asia": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Endemic fauna of Yemen are not fauna of East Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Birds from the Sierra Madre Oriental, but not the Sierra Madre del Sur": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Birds from the Sierra Madre Oriental, but not the Sierra Madre del Sur\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Early Triassic reptiles of South America": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Early Triassic reptiles of South America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Birds of the Sierra Madre Oriental but not native to the Western United States": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Birds of the Sierra Madre Oriental but not native to the Western United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Even-toed ungulates that arent extinct": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Even-toed ungulates that arent extinct\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Prehistoric marine mammals excluding Miocene animals": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Prehistoric marine mammals excluding Miocene animals\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Arthropods of Vietnam excluding Insects of Southeast Asia": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Arthropods of Vietnam excluding Insects of Southeast Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Reptiles from Taiwan that exclude reptiles from China.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Reptiles from Taiwan that exclude reptiles from China.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Non-Arthopod Parastacidae of Australia": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Non-Arthopod Parastacidae of Australia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "African, but not freshwater, Crustaceans": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: African, but not freshwater, Crustaceans\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Non-Charadriiformes shorebirds": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Non-Charadriiformes shorebirds\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Non freshwater fish of Oceania that are from Papua New Guinea": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Non freshwater fish of Oceania that are from Papua New Guinea\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Moths from Seychelles that aren't in Madagascar": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Moths from Seychelles that aren't in Madagascar\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Arctic land animals excluding Mammals of the Arctic": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Arctic land animals excluding Mammals of the Arctic\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Birds in 1872, but not in Eurasia.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Birds in 1872, but not in Eurasia.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Invertebrates but not Arthropods of Vietnam": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Invertebrates but not Arthropods of Vietnam\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "what are some Accipitriformes that are not Birds of prey": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: what are some Accipitriformes that are not Birds of prey\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Extinct birds that are not Cenozoic from South America.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Extinct birds that are not Cenozoic from South America.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Non fresh water fish that are endangered": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Non fresh water fish that are endangered\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Tyranni birds that aren't from South America": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Tyranni birds that aren't from South America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Eocene animals of South America that aren't extinct": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Eocene animals of South America that aren't extinct\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Bhutan mammal species that aren't in China": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Bhutan mammal species that aren't in China\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Prehistoric toothed whales that aren't from the Neogene period": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Prehistoric toothed whales that aren't from the Neogene period\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "Reptiles of Trinidad and Tobago not found in Venezuela": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Reptiles of Trinidad and Tobago not found in Venezuela\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are not _",
        "domain": "animals"
    },
    "what are some carnivores of south america that are in the amazon": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: what are some carnivores of south america that are in the amazon\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Birds of prey that are from South Africa": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Birds of prey that are from South Africa\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Birds that were discovered in North America in 1801": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Birds that were discovered in North America in 1801\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Cenozoic animals of Africa and Eocene bats": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Cenozoic animals of Africa and Eocene bats\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "birds from brazil described in 1862": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: birds from brazil described in 1862\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Birds described in 1829 from the Yucatan peninsula.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Birds described in 1829 from the Yucatan peninsula.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Spiders that exist in Europe and South America": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Spiders that exist in Europe and South America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Herbivorous Invertebrates of the United States": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Herbivorous Invertebrates of the United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Gilding amphibians of Thailand": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Gilding amphibians of Thailand\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "North American animals from the Neogene period that are grouped by eating behaviors": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: North American animals from the Neogene period that are grouped by eating behaviors\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Endangered fauna of North America and Nicaragua": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Endangered fauna of North America and Nicaragua\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Birds discovered in Sub-Saharan Africa in 1849": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Birds discovered in Sub-Saharan Africa in 1849\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Freshwater fish of Argentina and Peru": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Freshwater fish of Argentina and Peru\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Procellariidae dinosaurs of Asia": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Procellariidae dinosaurs of Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Mammals of South Africa that also have eating behaviors": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Mammals of South Africa that also have eating behaviors\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Sub-Saharan African birds described in 1893": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Sub-Saharan African birds described in 1893\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Prehistoric mammal genera from Europe": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Prehistoric mammal genera from Europe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Endemic flightless birds of the United States": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Endemic flightless birds of the United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Birds discovered in the Chihuahuan Desert in 1881": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Birds discovered in the Chihuahuan Desert in 1881\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Vulnerable animals native to Turkey": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Vulnerable animals native to Turkey\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Mammals of South Australia that are Bats": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Mammals of South Australia that are Bats\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Vesper bats from Borneo": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Vesper bats from Borneo\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Songbirds described in 1851": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Songbirds described in 1851\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Critically endangered reptiles of Oceania": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Critically endangered reptiles of Oceania\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Freshwater animals of Europe that are Fish of China": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Freshwater animals of Europe that are Fish of China\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Animals of Oceania and North America from the Paleozoic period that are extinct": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Animals of Oceania and North America from the Paleozoic period that are extinct\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Endangered fauna of Australia that are also in New South Wales": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Endangered fauna of Australia that are also in New South Wales\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Birds that are found in East Asia and Australia": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Birds that are found in East Asia and Australia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Birds in Oceania that were described in 1864": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Birds in Oceania that were described in 1864\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Extinct animals of North America including Oligocene mammals": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Extinct animals of North America including Oligocene mammals\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Paleogene animals of Europe that are Prehistoric birds of North America": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Paleogene animals of Europe that are Prehistoric birds of North America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Marine Invertebrates of Western Asia and Africa": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Marine Invertebrates of Western Asia and Africa\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Birds from New South Wales and South America": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Birds from New South Wales and South America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Birds in 1858 that were in India.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Birds in 1858 that were in India.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Animals Argentina and Australia have in common": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Animals Argentina and Australia have in common\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Mammals of Papua New Guinea that are Vertebrates of Western Australia": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Mammals of Papua New Guinea that are Vertebrates of Western Australia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Birds discovered in the 20th century in Northeastern Mexico": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Birds discovered in the 20th century in Northeastern Mexico\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Oceanic mammals that are fauna of the Maluku Islands.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Oceanic mammals that are fauna of the Maluku Islands.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Frogs are amphibians of Honduras and South America": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Frogs are amphibians of Honduras and South America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Pelecaniformes that are Miocene animals": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Pelecaniformes that are Miocene animals\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Falconiformes of the Caribbean": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Falconiformes of the Caribbean\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Galliformes of Ecuador": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Galliformes of Ecuador\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Birds that were discovered in the 20th century in Western New Guinea": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Birds that were discovered in the 20th century in Western New Guinea\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Prehistoric reptiles of North America that are also extinct in South America": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Prehistoric reptiles of North America that are also extinct in South America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "European odd-toed ungulates from the Cenozoic period": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: European odd-toed ungulates from the Cenozoic period\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Birds that were discovered in 1867 and that are native to the Western US": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Birds that were discovered in 1867 and that are native to the Western US\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Birds of India that are Fauna of Hispaniola": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Birds of India that are Fauna of Hispaniola\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Birds from Central America that are now only found in North America": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Birds from Central America that are now only found in North America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "what are the birds of Myammar and sri lanka": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: what are the birds of Myammar and sri lanka\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Cave arthropods found in California.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Cave arthropods found in California.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Fauna of Southeast Asia and Birds of Russia": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Fauna of Southeast Asia and Birds of Russia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Arthropods found in both Africa and the Philippines": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Arthropods found in both Africa and the Philippines\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Neotropical realm fauna and Cenozoic animals of Africa": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Neotropical realm fauna and Cenozoic animals of Africa\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Cambaridae of Mexico": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Cambaridae of Mexico\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Birds of Europe in 1861": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Birds of Europe in 1861\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Jurassic animals of North America that are Mammals of North America": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Jurassic animals of North America that are Mammals of North America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Endemic fauna of Malaysia that are also birds of 1892": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Endemic fauna of Malaysia that are also birds of 1892\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Birds of Jamaica that were discovered in 1847": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Birds of Jamaica that were discovered in 1847\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Critically endangered animals and fish of Africa": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Critically endangered animals and fish of Africa\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Invertebrate Pleistocene animals of North America": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Invertebrate Pleistocene animals of North America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Birds of Queensland are described in 1851": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Birds of Queensland are described in 1851\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Mammals of Peru from the Pleistocene period": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Mammals of Peru from the Pleistocene period\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "Endangered animals in the Greater Antilles.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Endangered animals in the Greater Antilles.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _",
        "domain": "animals"
    },
    "African Early Triassic amphibians": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: African Early Triassic amphibians\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Neogene fish from Asia": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Neogene fish from Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "The Thar Desert fauna": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: The Thar Desert fauna\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "extinct family of small lizards": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: extinct family of small lizards\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "South American reptiles from the Eocene period": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: South American reptiles from the Eocene period\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Saint Lucian birds": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Saint Lucian birds\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Birds only found in Annob\u00f3n": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Birds only found in Annob\u00f3n\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Fiji's mammals": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Fiji's mammals\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Fish from the Devonian period in Asia": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Fish from the Devonian period in Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "1989 birds": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: 1989 birds\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Bolivian insects": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Bolivian insects\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Birds found in the Austral Islands": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Birds found in the Austral Islands\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "North American Late Jurassic reptiles": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: North American Late Jurassic reptiles\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "South America prehistoric turtles.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: South America prehistoric turtles.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Bioko's endemic fauna": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Bioko's endemic fauna\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Fish of Asia from the Oligocene period": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Fish of Asia from the Oligocene period\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Flying fish": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Flying fish\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Turtles of the Pleistocene": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Turtles of the Pleistocene\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "New Mexico's endemic fauna": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: New Mexico's endemic fauna\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "list of Birds described in 1941": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: list of Birds described in 1941\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "insects that critically endangered": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: insects that critically endangered\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Native animals from the Maldives": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Native animals from the Maldives\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "European prehistoric peinnipeds.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: European prehistoric peinnipeds.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Samar's fauna": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Samar's fauna\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Animals only found in Trinidad and Tobago": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Animals only found in Trinidad and Tobago\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Birds that were described in 1996": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Birds that were described in 1996\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "European amphibians from the Paleogene period": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: European amphibians from the Paleogene period\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Animals from Uruguay": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Animals from Uruguay\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Papuan Peninsula birds": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Papuan Peninsula birds\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "European reptiles from the Permian period": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: European reptiles from the Permian period\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Anthozoa found in the United States.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Anthozoa found in the United States.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Birds from 1959.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Birds from 1959.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Mammals from Hong Kong": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Mammals from Hong Kong\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Molluscs found in the Black Sea": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Molluscs found in the Black Sea\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Cape Verde animals": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Cape Verde animals\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Indian Ocean Islands extinct birds": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Indian Ocean Islands extinct birds\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Vietnamese animals that are extinct": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Vietnamese animals that are extinct\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Animals from Oman": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Animals from Oman\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Mindoro birds": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Mindoro birds\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Reptiles of North America from the Carboniferous period": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Reptiles of North America from the Carboniferous period\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Animals in Germany.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Animals in Germany.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Birds that are found only in Angola": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Birds that are found only in Angola\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Birds from 1955.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Birds from 1955.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Urodelas": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Urodelas\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "North American reptiles from the Quaternary period": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: North American reptiles from the Quaternary period\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Birds that were discovered in 2006": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Birds that were discovered in 2006\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Australia's Cnidarians": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Australia's Cnidarians\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Syria's fish": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Syria's fish\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Native animals of Jordan": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Native animals of Jordan\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "South American Pliocene reptiles": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: South American Pliocene reptiles\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Animals from the Cayman Islands": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Animals from the Cayman Islands\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "what are Paleozoic animals of Oceania": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: what are Paleozoic animals of Oceania\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "what are Mesozoic cephalopods of Asia": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: what are Mesozoic cephalopods of Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Barbados fauna": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Barbados fauna\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Bolivian Endemic birds": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Bolivian Endemic birds\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Birds found in the Maldives.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Birds found in the Maldives.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Oceania Triassic animals": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Oceania Triassic animals\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Hyracoidea.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Hyracoidea.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Central America Felids": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Central America Felids\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Hippopotamuses that are extinct": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Hippopotamuses that are extinct\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Cura\u00e7ao's fauna": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Cura\u00e7ao's fauna\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Psittaculidae": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Psittaculidae\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "what are Neogene mammals of Oceania": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: what are Neogene mammals of Oceania\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_",
        "domain": "animals"
    },
    "Endemic fauna that are both Birds and Fauna of the Canary Islands": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Endemic fauna that are both Birds and Fauna of the Canary Islands\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Fauna from both Western United States and California that are also tool using animals.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Fauna from both Western United States and California that are also tool using animals.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Catfish of Africa that are both Fish of Uganda and Fauna of the Middle East": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Catfish of Africa that are both Fish of Uganda and Fauna of the Middle East\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Vulnerable insects that are endemic to Indonesia.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Vulnerable insects that are endemic to Indonesia.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "endangered fauna of fauna of east asia and vietnam": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: endangered fauna of fauna of east asia and vietnam\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Birds the Atlantic Forest, the Peruvian Amazon, and the Guianas have in common": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Birds the Atlantic Forest, the Peruvian Amazon, and the Guianas have in common\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Amphibious organisms that are in both Belize and Mexico": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Amphibious organisms that are in both Belize and Mexico\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Birds described in 1866 that are both Fauna of the Maluku Islands and Oceanian realm fauna": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Birds described in 1866 that are both Fauna of the Maluku Islands and Oceanian realm fauna\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Cenozoic animals of North America, Pleistocene animals of South America and Prehistoric birds": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Cenozoic animals of North America, Pleistocene animals of South America and Prehistoric birds\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Fauna and birds Oceania described in 1895": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Fauna and birds Oceania described in 1895\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Birds in 1878 that were only found in Palawan.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Birds in 1878 that were only found in Palawan.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Fauna of the Great Plains that are both Fauna of Canada and Birds of Colombia": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Fauna of the Great Plains that are both Fauna of Canada and Birds of Colombia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Marine mammals of Sub-Saharan Africa, South America and Oceania": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Marine mammals of Sub-Saharan Africa, South America and Oceania\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Middle East birds that can be found in Eurasia and Passeri that are also known as Fauna": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Middle East birds that can be found in Eurasia and Passeri that are also known as Fauna\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Cenozoic animals of Europe and Australasian realm fauna that are extinct.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Cenozoic animals of Europe and Australasian realm fauna that are extinct.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Extinct prehistoric animals of South America and Asia": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Extinct prehistoric animals of South America and Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Birds from both El Salvador and Colombia, and are also Holarctic fauna.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Birds from both El Salvador and Colombia, and are also Holarctic fauna.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Mammals of South Asia that are also both Fauna of the Pacific Ocean and China": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Mammals of South Asia that are also both Fauna of the Pacific Ocean and China\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "what are some Snakes of Mexico and suriname?": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: what are some Snakes of Mexico and suriname?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Neotropical realm fauna that are also in the Caribbean and are amphibians of Costa Rica": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Neotropical realm fauna that are also in the Caribbean and are amphibians of Costa Rica\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Neotropical realm fauna that are both Fauna of the Southeastern United States and Fish of Mexico": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Neotropical realm fauna that are both Fauna of the Southeastern United States and Fish of Mexico\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Palearctic fauna that are both Cretaceous animals of Asia and Fish of Asia": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Palearctic fauna that are both Cretaceous animals of Asia and Fish of Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Endemic fauna of Puerto Rico that are also Extinct animals of the United States and Extinct animals": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Endemic fauna of Puerto Rico that are also Extinct animals of the United States and Extinct animals\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "North American Cenozoic animals that are both Pleistocene and Quaternary mammals of Asia": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: North American Cenozoic animals that are both Pleistocene and Quaternary mammals of Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Holarctic Native birds of the Western United States and of Ecuador.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Holarctic Native birds of the Western United States and of Ecuador.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Freshwater fish of Ecuador, North America, and Western Central  American coastal fauna": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Freshwater fish of Ecuador, North America, and Western Central  American coastal fauna\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Native aquatic animals found in Macaronesia": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Native aquatic animals found in Macaronesia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Insects that are found in Zimbabwe, Ethiopia, and Mozambique": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Insects that are found in Zimbabwe, Ethiopia, and Mozambique\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Freshwater fish from Central America, Colombia,and Panama": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Freshwater fish from Central America, Colombia,and Panama\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Birds of prey of Africa": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Birds of prey of Africa\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Aquatic animals are both arthropods of Africa and Parastacidae": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Aquatic animals are both arthropods of Africa and Parastacidae\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Birds of Hawaii that are Endemic fauna of the United States and Endangered fauna of North America": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Birds of Hawaii that are Endemic fauna of the United States and Endangered fauna of North America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Insects of Africa, East Asia, and Melanesia.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Insects of Africa, East Asia, and Melanesia.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Molluscs and Invertebrates of Angola that are also Invertebrates of Sao Tome and Principe.": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Molluscs and Invertebrates of Angola that are also Invertebrates of Sao Tome and Principe.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "chinese birds discovered in 1776": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: chinese birds discovered in 1776\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Rodents that are from Asia,Southeast Asia, and Oceania": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Rodents that are from Asia,Southeast Asia, and Oceania\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Native birds in the Western United States, Guianas, and Rio Grande valleys.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Native birds in the Western United States, Guianas, and Rio Grande valleys.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Prehistoric Pleistocene mammal families of South America": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Prehistoric Pleistocene mammal families of South America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Birds of Central America that are both Fauna of Puerto Rico and Fauna of the Eastern United States": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Birds of Central America that are both Fauna of Puerto Rico and Fauna of the Eastern United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Fauna of Melanesia are mammals of Western New Guinea and East Asia": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Fauna of Melanesia are mammals of Western New Guinea and East Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Mammals of Mexico that are both Aquatic animals and Aquatic mammals": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Mammals of Mexico that are both Aquatic animals and Aquatic mammals\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Birds discovered in China and Pakistan during the 20th century": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Birds discovered in China and Pakistan during the 20th century\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Endemic fauna of Borneo that are both Arthropods of Asia and Australasian realm fauna": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Endemic fauna of Borneo that are both Arthropods of Asia and Australasian realm fauna\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Neognathae of indonesia and queensland": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Neognathae of indonesia and queensland\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Birds of both Trinidad and Tobago that are Hummingbirds of South America": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Birds of both Trinidad and Tobago that are Hummingbirds of South America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "1847 Palearctic Birds of Myanmar": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: 1847 Palearctic Birds of Myanmar\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Endemic birds of Jamaica that are also of the Greater Antilles and described in 1827": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Endemic birds of Jamaica that are also of the Greater Antilles and described in 1827\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Holarctic birds found in Paraguay and the Rio Grande valleys": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Holarctic birds found in Paraguay and the Rio Grande valleys\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Mammals of Asia, South America, and the Neotrpoical realm from the Neogene period": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Mammals of Asia, South America, and the Neotrpoical realm from the Neogene period\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Invertebrates of Australia that are fauna from Asia and China": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Invertebrates of Australia that are fauna from Asia and China\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also both _ and _",
        "domain": "animals"
    },
    "Crayfish that are Parastacidae but aren't Arthropods of Australia.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Crayfish that are Parastacidae but aren't Arthropods of Australia.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Brazilian amphibians,organisms that are not toads.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Brazilian amphibians,organisms that are not toads.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Dinosaurs of North America that are also wading birds but not of the Atlantic Ocean": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Dinosaurs of North America that are also wading birds but not of the Atlantic Ocean\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "prehistoric mammals of Asia and North America, that aren't extinct in Europe": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: prehistoric mammals of Asia and North America, that aren't extinct in Europe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Birds Central Asia and Africa have in common but not found in the Middle East": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Birds Central Asia and Africa have in common but not found in the Middle East\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Mammals and endangered fauna of Asia, excluding Mammals of Southeast Asia.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Mammals and endangered fauna of Asia, excluding Mammals of Southeast Asia.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "fauna of mexico and brazil that arent birds from the amazon basin": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: fauna of mexico and brazil that arent birds from the amazon basin\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Insects of Africa but not Lepidoptera that are Endemic fauna in the Democratic Republic of the Congo": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Insects of Africa but not Lepidoptera that are Endemic fauna in the Democratic Republic of the Congo\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Mammals of Nepal but not Southeast Asia": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Mammals of Nepal but not Southeast Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Afrotropical invertebrates of Europe that aren't Lepidoptera of Asia": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Afrotropical invertebrates of Europe that aren't Lepidoptera of Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Neognathae of the Indian Ocean, excluding East Africa": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Neognathae of the Indian Ocean, excluding East Africa\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Afrotropical realm fauna are not insects but are Invertebrates of Europe": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Afrotropical realm fauna are not insects but are Invertebrates of Europe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Prehistoric Extinct animals of Asia but not Prehistoric mammal genera": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Prehistoric Extinct animals of Asia but not Prehistoric mammal genera\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Non-aquatic reptiles of Europe": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Non-aquatic reptiles of Europe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Fauna found in both South China and Vietnam, excluding birds of Myanmar": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Fauna found in both South China and Vietnam, excluding birds of Myanmar\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Birds found in South China and Vietnam, excluding Yunnan": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Birds found in South China and Vietnam, excluding Yunnan\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Insects of Asia that are Diptera of South America but are not Arthropods of Europe.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Insects of Asia that are Diptera of South America but are not Arthropods of Europe.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Afrotropical realm Vertebrates found in Rwanda, excluding mammals of Sub-Saharan Africa": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Afrotropical realm Vertebrates found in Rwanda, excluding mammals of Sub-Saharan Africa\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Mammal fauna that are from northeast Asia and Malaysia but aren't mammals from Cambodia.": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Mammal fauna that are from northeast Asia and Malaysia but aren't mammals from Cambodia.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Fauna of South China and vietnam, but not Birds of Yunnan": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Fauna of South China and vietnam, but not Birds of Yunnan\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Moths of the Middle East and Madagascar but not Mauritius": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Moths of the Middle East and Madagascar but not Mauritius\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Endangered Mammals of Southeast Asia, excluding Fauna of Indonesia": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Endangered Mammals of Southeast Asia, excluding Fauna of Indonesia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Mammals and fauna of Asia that are endangered, but are not fauna of Southeast Asia.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Mammals and fauna of Asia that are endangered, but are not fauna of Southeast Asia.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Insects of Asia but not insects of Europe that are also Diptera of South America": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Insects of Asia but not insects of Europe that are also Diptera of South America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Mammals found in Southeast Asia and Bangladesh, excluding Myanmar": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Mammals found in Southeast Asia and Bangladesh, excluding Myanmar\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Fauna of Belize that are birds of Guatemala but can't be from the Yucatan peninsula.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Fauna of Belize that are birds of Guatemala but can't be from the Yucatan peninsula.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Extinct animals from North America and Hispaniola, but not Miocene insects": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Extinct animals from North America and Hispaniola, but not Miocene insects\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Holarctic birds of Bolivia but not Paraguay": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Holarctic birds of Bolivia but not Paraguay\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Fish of Venezuela that are also in Brazil but not Freshwater of South America": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Fish of Venezuela that are also in Brazil but not Freshwater of South America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "what are Birds of South Asia and Central China, but not Birds of Yunnan?": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: what are Birds of South Asia and Central China, but not Birds of Yunnan?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Reptiles found in China and Laos, but not in Myanmar": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Reptiles found in China and Laos, but not in Myanmar\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Birds of Wallacea that are also in Australia but not the Maluku Islands": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Birds of Wallacea that are also in Australia but not the Maluku Islands\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Reptiles found in the Caribbean as well as Trinidad and Tobago, but not Venezuela": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Reptiles found in the Caribbean as well as Trinidad and Tobago, but not Venezuela\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Insects of West Africa that are also Insects of Madagascar excluding Lepidoptera of Asia": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Insects of West Africa that are also Insects of Madagascar excluding Lepidoptera of Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Afrotropical realm fauna that are also of the Mediterranean Sea but not fish": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Afrotropical realm fauna that are also of the Mediterranean Sea but not fish\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Dinosaurs of North America that are also Wading birds excluding Birds of the Caribbean": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Dinosaurs of North America that are also Wading birds excluding Birds of the Caribbean\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Palearctic fauna from Indonesia but not Vietnam": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Palearctic fauna from Indonesia but not Vietnam\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Marsupials of Oceania are Fauna of New South Wales but are not Fauna of Victoria(Australia)": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Marsupials of Oceania are Fauna of New South Wales but are not Fauna of Victoria(Australia)\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Indomalayan realm fauna that are also fish of the Pacific ocean but not of New Guinea": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Indomalayan realm fauna that are also fish of the Pacific ocean but not of New Guinea\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Brazilian amphibians but not toads": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Brazilian amphibians but not toads\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Mammals of North America that are extinct in Asia, excluding extinct animals of Europe": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Mammals of North America that are extinct in Asia, excluding extinct animals of Europe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Cetaceans mammals that are not Miocene": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Cetaceans mammals that are not Miocene\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Animals that are from Ecuador and Central America, but not Peru": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Animals that are from Ecuador and Central America, but not Peru\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Mammals of Europe that are also African prehistoric animals but not Miocene": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Mammals of Europe that are also African prehistoric animals but not Miocene\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Fauna lepidoptera that are both from Venezuela and, South America but aren't insects of Brazil.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Fauna lepidoptera that are both from Venezuela and, South America but aren't insects of Brazil.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Prehistoric mammals with only two limbs, excluding Miocene animals.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Prehistoric mammals with only two limbs, excluding Miocene animals.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Moths that are in the Middle East, Madagascar, but not in Mauritius": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Moths that are in the Middle East, Madagascar, but not in Mauritius\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Endemic fauna and Cenozoic birds but no Birds of New Zealand.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Endemic fauna and Cenozoic birds but no Birds of New Zealand.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Birds of South America that are also Nearctic realm excluding Fauna of the Western United States": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Birds of South America that are also Nearctic realm excluding Fauna of the Western United States\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Birds of India and Fauna of Bangladesh but not of Tibet": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Birds of India and Fauna of Bangladesh but not of Tibet\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Fauna from Nicaragua that aren't from Panama but, are also amphibians from North America.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Fauna from Nicaragua that aren't from Panama but, are also amphibians from North America.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Mammals found in East Asia and Nepal, excluding Southeast Asia": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Mammals found in East Asia and Nepal, excluding Southeast Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Moths of Asia that are also in Mauritius but not Comoros": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Moths of Asia that are also in Mauritius but not Comoros\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "South Asian Mammals also of Bhutan but not China": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: South Asian Mammals also of Bhutan but not China\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Songbirds from the US that aren't from Hawaii": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Songbirds from the US that aren't from Hawaii\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Birds found in Wallacea and Australia but not found in the Maluku Islands": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Birds found in Wallacea and Australia but not found in the Maluku Islands\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ that are also _ but not _",
        "domain": "animals"
    },
    "Cretaceous reptiles of Africa or Prehistoric birds of Africa or Birds described in 2003": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Cretaceous reptiles of Africa or Prehistoric birds of Africa or Birds described in 2003\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "what is Oligocene birds of Australia, Paleogene reptiles of Australia, or Birds described in 2012?": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: what is Oligocene birds of Australia, Paleogene reptiles of Australia, or Birds described in 2012?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Animals from Barbados, New Zealand, or that were discovered in Hawaii": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Animals from Barbados, New Zealand, or that were discovered in Hawaii\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Prehistoric turtles or Pliocene reptiles of Asia or turtles of Europe": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Prehistoric turtles or Pliocene reptiles of Asia or turtles of Europe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Prehistoric or Cenozoic birds of Africa or Opisthocomiformes": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Prehistoric or Cenozoic birds of Africa or Opisthocomiformes\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Mammals of Dominica or fauna or endemic fauna of the United States Virgin Islands": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Mammals of Dominica or fauna or endemic fauna of the United States Virgin Islands\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Prehistoric cephalopods, Cretaceous cephalopods, and Late cretaceous cephalopods of North America": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Prehistoric cephalopods, Cretaceous cephalopods, and Late cretaceous cephalopods of North America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "European molluscs from the Cretaceous period or prehistoric North American cephalopods": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: European molluscs from the Cretaceous period or prehistoric North American cephalopods\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Late Ordovician animals or Paleozoic animals of Oceania or Australia": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Late Ordovician animals or Paleozoic animals of Oceania or Australia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "North American or European birds from the Eocene period, or vultures": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: North American or European birds from the Eocene period, or vultures\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Endemic fauna of England, animals from St Kilda SCotland, or Animals from the UK": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Endemic fauna of England, animals from St Kilda SCotland, or Animals from the UK\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Middle Ordovician animals or Ordovician animals of South and North America": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Middle Ordovician animals or Ordovician animals of South and North America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Quaternary or Miocene birds of Australia or Dromornithidae": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Quaternary or Miocene birds of Australia or Dromornithidae\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Eocene reptiles and birds of South America or New World vultures.": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Eocene reptiles and birds of South America or New World vultures.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Birds from Grenada, Saint Vincent and the Grenadines, or Saint Lucia": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Birds from Grenada, Saint Vincent and the Grenadines, or Saint Lucia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Pennsylvanian insects or Prehistoric arthropods of Asia or Europe's Permian arthropods": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Pennsylvanian insects or Prehistoric arthropods of Asia or Europe's Permian arthropods\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Birds of the Azores or Birds described in 1954 or 2017": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Birds of the Azores or Birds described in 1954 or 2017\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Pliocene reptiles of North America, Atlantic auks or, animals in the United Kingdom.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Pliocene reptiles of North America, Atlantic auks or, animals in the United Kingdom.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Eocene birds of South or North America or Cathartidae": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Eocene birds of South or North America or Cathartidae\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Amphibians of Mongolia or Endemic fauna of Uzbekistan or Fauna of Uzbekistan": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Amphibians of Mongolia or Endemic fauna of Uzbekistan or Fauna of Uzbekistan\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Saint Kitts and Nevis Fauna or Birds or Mammals": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Saint Kitts and Nevis Fauna or Birds or Mammals\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Late Cretaceous cephalopods of North America or Cretaceous cephalopods of North America or Cretaceous molluscs of Europe": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Late Cretaceous cephalopods of North America or Cretaceous cephalopods of North America or Cretaceous molluscs of Europe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Endemic birds of the Democratic Republic of the Congo, Northeastern Mexico or birds discovered in 1947": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Endemic birds of the Democratic Republic of the Congo, Northeastern Mexico or birds discovered in 1947\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Insects/animals from the Cisuralian and Pennsylvanian period, or Prehistoric arthropods from Asia.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Insects/animals from the Cisuralian and Pennsylvanian period, or Prehistoric arthropods from Asia.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Mammals of Samoa or Tonga or fauna of American Samoa": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Mammals of Samoa or Tonga or fauna of American Samoa\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Silurian invertebrates or Silurian echinoderms or Cambrian echinoderms": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Silurian invertebrates or Silurian echinoderms or Cambrian echinoderms\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Endemic birds of Southern Mexico, or Birds described in 1973, or Birds of Saint Helena Island": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Endemic birds of Southern Mexico, or Birds described in 1973, or Birds of Saint Helena Island\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Cretaceous molluscs of Europe, Paleocene animals of Africa, or Mesozoic cephalopods of Europe": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Cretaceous molluscs of Europe, Paleocene animals of Africa, or Mesozoic cephalopods of Europe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Fauna of Burkina Faso, Mali, or Niger": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Fauna of Burkina Faso, Mali, or Niger\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Neogene or Miocene from Australia, or Paleogene animals of Australia": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Neogene or Miocene from Australia, or Paleogene animals of Australia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "what are some Birds discovered in 1947, endemic fauna of Northeastern Mexico, or Endemic birds of the Democratic Republic of the Congo": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: what are some Birds discovered in 1947, endemic fauna of Northeastern Mexico, or Endemic birds of the Democratic Republic of the Congo\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Animals from Guimaras, Romblon, or Masbate": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Animals from Guimaras, Romblon, or Masbate\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Mammals of Antigua and Barbuda or Fauna or Birds of Martinique": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Mammals of Antigua and Barbuda or Fauna or Birds of Martinique\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Birds of South America from the Paleogene period of the Eocene period or birds discovered in 2011": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Birds of South America from the Paleogene period of the Eocene period or birds discovered in 2011\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "what are elephant birds, Extinct birds of Indian Ocean islands, or Birds discovered  in 1968?": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: what are elephant birds, Extinct birds of Indian Ocean islands, or Birds discovered  in 1968?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Mammals of New Caledonia, Vanuatu, or Samoa": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Mammals of New Caledonia, Vanuatu, or Samoa\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Mammals of Guadeloupe, Dominica, and Fauna of Saint Kitts and Nevis": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Mammals of Guadeloupe, Dominica, and Fauna of Saint Kitts and Nevis\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "what are Pliocene reptiles of Asia, Prehistoric turtles of Asia, or Miocene reptiles of Europe?": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: what are Pliocene reptiles of Asia, Prehistoric turtles of Asia, or Miocene reptiles of Europe?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Miocene, Pleistocene, or Quaternary reptiles of Asia": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: Miocene, Pleistocene, or Quaternary reptiles of Asia\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "what are some Pinnipeds of Australia, Pliocene pinnipeds, or Pinnipeds of Antarctica?": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: what are some Pinnipeds of Australia, Pliocene pinnipeds, or Pinnipeds of Antarctica?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Fauna of the United Arab Emirates or Oman Endemic fauna": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Fauna of the United Arab Emirates or Oman Endemic fauna\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Jurassic animals or reptiles of South America": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Jurassic animals or reptiles of South America\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Molluscs or cephalopods of Europe from the Cretaceous period or cephalopods of North America from the Mesozoic period": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Molluscs or cephalopods of Europe from the Cretaceous period or cephalopods of North America from the Mesozoic period\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "what are the Quaternary reptiles of Asia, Pliocene reptiles of Asia, or Pleistocene crocodylomorphs?": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nHow about this Instruction?\nInstruction: what are the Quaternary reptiles of Asia, Pliocene reptiles of Asia, or Pleistocene crocodylomorphs?\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Birds described in 1763, of Greenland, or Atlantic auks": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Birds described in 1763, of Greenland, or Atlantic auks\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Fauna or birds of Saint Kitts and Nevis or Mammals of Guadeloupe": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Fauna or birds of Saint Kitts and Nevis or Mammals of Guadeloupe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "North American cephalopods from the Prehistoric period or Asian or European cephalopods from the Mesozoic period": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: North American cephalopods from the Prehistoric period or Asian or European cephalopods from the Mesozoic period\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Mesozoic or Late Cretaceous cephalopods of North America, or Cretaceous cephalopods of Europe": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Mesozoic or Late Cretaceous cephalopods of North America, or Cretaceous cephalopods of Europe\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Oligocene animals of South America, crocodylomorphs, or New Caledonia Holocene fauna": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Oligocene animals of South America, crocodylomorphs, or New Caledonia Holocene fauna\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Eared seals or mammals from New Zealand.": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Eared seals or mammals from New Zealand.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Mammals of American Samoa or Mammals of Tonga or Fauna of Niue": {
        "prompt": "Instruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Mammals of American Samoa or Mammals of Tonga or Fauna of Niue\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Oligocene or Neogene birds of Australia or Dromornithidae": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Oligocene or Neogene birds of Australia or Dromornithidae\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Ciconiiformes or Ciconiidae or New World vultures": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Ciconiiformes or Ciconiidae or New World vultures\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Prehistoric birds of Africa or Cretaceous reptiles of Africa or Cenozoic birds of Africa": {
        "prompt": "Instruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Prehistoric birds of Africa or Cretaceous reptiles of Africa or Cenozoic birds of Africa\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Birds of Ascension Island or the British Virgin Islands, or animals of the British Virgin Islands": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Birds of Ascension Island or the British Virgin Islands, or animals of the British Virgin Islands\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Australian or Suliformes Oligocene birds or Paleogene birds of Oceania": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Australian or Suliformes Oligocene birds or Paleogene birds of Oceania\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Birds of Martinique or Fauna of Martinique or Mammals of Antigua and Barbuda": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: Birds of Martinique or Fauna of Martinique or Mammals of Antigua and Barbuda\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Birds from Monserrat, or Saint Lucia, or British Virgin Islands.": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Birds from Monserrat, or Saint Lucia, or British Virgin Islands.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Cretaceous and Mesozoic cephalopods of Europe, or Prehistoric cephalopods of North America.": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nHow about this Instruction?\nInstruction: Cretaceous and Mesozoic cephalopods of Europe, or Prehistoric cephalopods of North America.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Birds of Guadeloupe, Mammals of Saint Kitts and Nevis or Fauna of Montserrat": {
        "prompt": "Instruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?\nProgram:\n```python\nquestion = 'What are Vultures or Eocene reptiles of South America or Extinct animals of Peru?'\n\n# Define the subquestions\nvultures = 'What are Vultures?'\neocene_reptiles_south_america = 'What are Eocene reptiles of South America'\nextinct_animals_peru = 'What are Extinct animals of Peru?'\n\n# Combine using the correct logical operator if needed\nanswer = vultures or eocene_reptiles_south_america or extinct_animals_peru\n```\n\nHow about this Instruction?\nInstruction: Birds of Guadeloupe, Mammals of Saint Kitts and Nevis or Fauna of Montserrat\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Swans, Dromornithidae or Anseriformes": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Swans, Dromornithidae or Anseriformes\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Invertebrates or African animals from the Ordovician period, or sponge families from the prehistoric times": {
        "prompt": "Instruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nInstruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nHow about this Instruction?\nInstruction: Invertebrates or African animals from the Ordovician period, or sponge families from the prehistoric times\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Animals of Syria": {
        "prompt": "Instruction: Indian musical and Malayalam films remade in other languages but not featuring an item number\nProgram:\n```python\nquestion = 'Indian musical and Malayalam films remade in other languages but not featuring an item number'\n\n# Define the subquestions\nindian_musical_films = 'Indian musical films remade in other languages'\nmalayalam_films = 'Malayalam films remade in other languages'\nitem_number_films = 'films featuring an item number'\n\n# Combine using the correct logical operator if needed\nanswer = indian_musical_films and malayalam_films and not item_number_films\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: Birds described in 1991 or Birds of the Western Province (Solomon Islands)\nProgram:\n```python\nquestion = 'Birds described in 1991 or Birds of the Western Province (Solomon Islands)'\n\n# Define the subquestions\nbirds_1991 = 'Birds described in 1991'\nbirds_western_province = 'Birds of the Western Province (Solomon Islands)'\n \n# Combine using the correct logical operator if needed\nanswer = birds_1991 or birds_western_province\n```\n\nHow about this Instruction?\nInstruction: Animals of Syria\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "Eocene, Cenozoic birds from Asia and, North America or, Struthioniformes.": {
        "prompt": "Instruction: Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals\nProgram:\n```python\nquestion = 'Vertebrate animals from Rwanda that are not also Sub-Saharan African mammals'\n \n# Define the subquestions\nvertebrate_animals_rwanda = 'Vertebrate animals from Rwanda'\nsub_Saharan_african_mammals = 'Sub-Saharan African mammals'\n \n# Combine using the correct logical operator if needed\nanswer = vertebrate_animals_rwanda and not sub_Saharan_african_mammals\n```\n\nInstruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nHow about this Instruction?\nInstruction: Eocene, Cenozoic birds from Asia and, North America or, Struthioniformes.\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    },
    "what are some Fauna of American Samoa, invertebrates of American Samoa, or Reptiles of Hawaii": {
        "prompt": "Instruction: Films based on works by Stanis\u0142aw Lem\nProgram:\n```python\nquestion = 'Films based on works by Stanis\u0142aw Lem'\n\n# Define the subquestions\nstanislaw_lem_films = 'Films based on works by Stanis\u0142aw Lem'\n\n# Combine using the correct logical operator if needed\nanswer = stanislaw_lem_films\n```\n\nInstruction: New American Library Books about the military\nProgram:\n```python\nquestion = 'New American Library Books about the military'\n \n# Define the subquestions\nnew_american_library_books = 'New American Library Books'\nmilitary_books = 'military books'\n \n# Combine using the correct logical operator if needed\nanswer = new_american_library_books and military_books\n```\n\nInstruction: 1998 fiction books based on Doctor Who\nProgram:\n```python\nquestion = '1998 fiction books based on Doctor Who'\n\n# Define the subquestions\nbooks_1998 = '1998 books'\nfiction_books = 'fiction books'\ndoctor_who_books = 'books based on Doctor Who'\n\n# Combine using the correct logical operator if needed\nanswer = books_1998 and fiction_books and doctor_who_books\n```\n\nHow about this Instruction?\nInstruction: what are some Fauna of American Samoa, invertebrates of American Samoa, or Reptiles of Hawaii\nProgram:\n```python\n",
        "instruction": "Think step by step to carry out the Instruction. You are only allowed to write python code.",
        "model_name": "gpt-3.5-turbo-1106",
        "template": "_ or _ or _",
        "domain": "animals"
    }
}